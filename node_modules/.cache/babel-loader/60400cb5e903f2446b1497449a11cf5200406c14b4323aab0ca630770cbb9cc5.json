{"ast":null,"code":"var _jsxFileName = \"D:\\\\VSC Projects\\\\SvenDevPortfolio-2\\\\src\\\\components\\\\ImageSlider\\\\ImageSlider.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport { motion, AnimatePresence, LayoutGroup } from 'framer-motion';\nimport '../ImageSlider/ImageSliderStyles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ImageSlider = () => {\n  _s();\n  const trackRef = useRef(null);\n  const [isFullScreen, setIsFullScreen] = useState(false);\n  const [selectedImage, setSelectedImage] = useState(null);\n  const [selectedIndex, setSelectedIndex] = useState(null);\n  const [imageTransitionState, setImageTransitionState] = useState({\n    rect: null,\n    objectPosition: '100% center',\n    scale: 1\n  });\n  const [sliderState, setSliderState] = useState({\n    mouseDownAt: 0,\n    prevPercentage: 0,\n    percentage: 0\n  });\n  useEffect(() => {\n    // Simulate a click on the first image\n    if (images.length > 0) {\n      const firstImageElement = document.querySelector(`#image-0`);\n      if (firstImageElement) {\n        const clickEvent = new MouseEvent('click', {\n          bubbles: true,\n          cancelable: true\n        });\n        firstImageElement.dispatchEvent(clickEvent);\n      }\n    }\n  }, [images]);\n  useEffect(() => {\n    const track = trackRef.current;\n    if (!track) return;\n    const handleOnDown = e => {\n      var _e$touches$;\n      if (isFullScreen) return;\n      const clientX = e.clientX || e.touches && ((_e$touches$ = e.touches[0]) === null || _e$touches$ === void 0 ? void 0 : _e$touches$.clientX);\n      setSliderState(prev => ({\n        ...prev,\n        mouseDownAt: clientX\n      }));\n    };\n    const handleOnUp = () => {\n      if (isFullScreen) return;\n      setSliderState(prev => ({\n        ...prev,\n        mouseDownAt: 0,\n        prevPercentage: prev.percentage\n      }));\n    };\n    const handleOnMove = e => {\n      var _e$touches$2;\n      if (isFullScreen) return;\n      const clientX = e.clientX || e.touches && ((_e$touches$2 = e.touches[0]) === null || _e$touches$2 === void 0 ? void 0 : _e$touches$2.clientX);\n      if (sliderState.mouseDownAt === 0) return;\n      const mouseDelta = sliderState.mouseDownAt - clientX;\n      const maxDelta = window.innerWidth / 0.8;\n      const percentage = mouseDelta / maxDelta * -100;\n      const nextPercentageUnconstrained = sliderState.prevPercentage + percentage;\n      const nextPercentage = Math.max(Math.min(nextPercentageUnconstrained, 0), -95);\n      setSliderState(prev => ({\n        ...prev,\n        percentage: nextPercentage\n      }));\n      if (track) {\n        requestAnimationFrame(() => {\n          track.animate({\n            transform: `translate(${nextPercentage}%, -50%)`\n          }, {\n            duration: 600,\n            fill: 'forwards',\n            easing: 'cubic-bezier(0.25, 0.1, 0.25, 1)'\n          });\n          const images = track.getElementsByClassName(\"image\");\n          Array.from(images).forEach(image => {\n            image.animate({\n              objectPosition: `${100 + nextPercentage * 1.1}% center`\n            }, {\n              duration: 600,\n              fill: 'forwards',\n              easing: 'cubic-bezier(0.25, 0.1, 0.25, 1)'\n            });\n          });\n        });\n      }\n    };\n    window.addEventListener('mousedown', handleOnDown);\n    window.addEventListener('mousemove', handleOnMove);\n    window.addEventListener('mouseup', handleOnUp);\n    window.addEventListener('touchstart', handleOnDown);\n    window.addEventListener('touchmove', handleOnMove);\n    window.addEventListener('touchend', handleOnUp);\n    return () => {\n      window.removeEventListener('mousedown', handleOnDown);\n      window.removeEventListener('mousemove', handleOnMove);\n      window.removeEventListener('mouseup', handleOnUp);\n      window.removeEventListener('touchstart', handleOnDown);\n      window.removeEventListener('touchmove', handleOnMove);\n      window.removeEventListener('touchend', handleOnUp);\n    };\n  }, [isFullScreen, sliderState]);\n  const handleImageClick = (e, src, index) => {\n    // If already in full screen and clicking the same image, close it\n    if (isFullScreen && selectedImage === src) {\n      setIsFullScreen(false);\n      setSelectedImage(null);\n      return;\n    }\n\n    // Capture the exact state of the image at click\n    const imgElement = e.target;\n    const rect = imgElement.getBoundingClientRect();\n\n    // Get computed style to capture exact object-position\n    const computedStyle = window.getComputedStyle(imgElement);\n    const objectPosition = computedStyle.objectPosition;\n    setImageTransitionState({\n      rect: {\n        top: rect.top,\n        left: rect.left,\n        width: rect.width,\n        height: rect.height\n      },\n      objectPosition,\n      scale: 1 // Matches the hover scale\n    });\n\n    // Set full screen state\n    setSelectedImage(src);\n    setSelectedIndex(index);\n    setIsFullScreen(true);\n  };\n  const images = Array.from({\n    length: 7\n  }, (_, index) => `/images/${index + 1}.jpg`);\n  return /*#__PURE__*/_jsxDEV(LayoutGroup, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"image-track\",\n      ref: trackRef,\n      style: {\n        transform: `translate(${sliderState.percentage}%, -50%)`\n      },\n      children: images.map((src, index) => /*#__PURE__*/_jsxDEV(motion.img, {\n        layoutId: `image-${index}`,\n        className: \"image\",\n        src: src,\n        alt: `Image ${index + 1}`,\n        draggable: \"false\",\n        onClick: e => handleImageClick(e, src, index),\n        whileHover: {\n          scale: 1.05,\n          duration: 2\n        },\n        style: {\n          cursor: 'pointer',\n          willChange: 'transform'\n        }\n      }, src, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(AnimatePresence, {\n      children: isFullScreen && imageTransitionState.rect && /*#__PURE__*/_jsxDEV(motion.div, {\n        initial: {\n          position: 'fixed',\n          top: imageTransitionState.rect.top,\n          left: imageTransitionState.rect.left,\n          width: imageTransitionState.rect.width,\n          height: imageTransitionState.rect.height,\n          scale: imageTransitionState.scale,\n          backgroundColor: 'black',\n          zIndex: 1000,\n          overflow: 'hidden'\n        },\n        animate: {\n          top: 0,\n          left: 0,\n          width: '100vw',\n          height: '100vh',\n          scale: 1\n        },\n        exit: {\n          top: imageTransitionState.rect.top,\n          left: imageTransitionState.rect.left,\n          width: imageTransitionState.rect.width,\n          height: imageTransitionState.rect.height,\n          scale: imageTransitionState.scale\n        },\n        transition: {\n          duration: 0.4,\n          type: \"tween\"\n        },\n        onClick: () => setIsFullScreen(false),\n        children: /*#__PURE__*/_jsxDEV(motion.img, {\n          src: selectedImage,\n          style: {\n            width: '100%',\n            height: '100%',\n            objectFit: 'cover',\n            objectPosition: imageTransitionState.objectPosition,\n            transform: `scale(${imageTransitionState.scale})`,\n            transformOrigin: 'center center'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 162,\n    columnNumber: 9\n  }, this);\n};\n_s(ImageSlider, \"f5qbrrQloGFRV2F+z/wEBrDuIdc=\");\n_c = ImageSlider;\nexport default ImageSlider;\nvar _c;\n$RefreshReg$(_c, \"ImageSlider\");","map":{"version":3,"names":["React","useEffect","useRef","useState","motion","AnimatePresence","LayoutGroup","jsxDEV","_jsxDEV","ImageSlider","_s","trackRef","isFullScreen","setIsFullScreen","selectedImage","setSelectedImage","selectedIndex","setSelectedIndex","imageTransitionState","setImageTransitionState","rect","objectPosition","scale","sliderState","setSliderState","mouseDownAt","prevPercentage","percentage","images","length","firstImageElement","document","querySelector","clickEvent","MouseEvent","bubbles","cancelable","dispatchEvent","track","current","handleOnDown","e","_e$touches$","clientX","touches","prev","handleOnUp","handleOnMove","_e$touches$2","mouseDelta","maxDelta","window","innerWidth","nextPercentageUnconstrained","nextPercentage","Math","max","min","requestAnimationFrame","animate","transform","duration","fill","easing","getElementsByClassName","Array","from","forEach","image","addEventListener","removeEventListener","handleImageClick","src","index","imgElement","target","getBoundingClientRect","computedStyle","getComputedStyle","top","left","width","height","_","children","id","ref","style","map","img","layoutId","className","alt","draggable","onClick","whileHover","cursor","willChange","fileName","_jsxFileName","lineNumber","columnNumber","div","initial","position","backgroundColor","zIndex","overflow","exit","transition","type","objectFit","transformOrigin","_c","$RefreshReg$"],"sources":["D:/VSC Projects/SvenDevPortfolio-2/src/components/ImageSlider/ImageSlider.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport { motion, AnimatePresence, LayoutGroup } from 'framer-motion';\r\nimport '../ImageSlider/ImageSliderStyles.css';\r\n\r\nconst ImageSlider = () => {\r\n    const trackRef = useRef(null);\r\n    const [isFullScreen, setIsFullScreen] = useState(false);\r\n    const [selectedImage, setSelectedImage] = useState(null);\r\n    const [selectedIndex, setSelectedIndex] = useState(null);\r\n    const [imageTransitionState, setImageTransitionState] = useState({\r\n        rect: null,\r\n        objectPosition: '100% center',\r\n        scale: 1\r\n    });\r\n\r\n    const [sliderState, setSliderState] = useState({\r\n        mouseDownAt: 0,\r\n        prevPercentage: 0,\r\n        percentage: 0\r\n    });\r\n    useEffect(() => {\r\n        // Simulate a click on the first image\r\n        if (images.length > 0) {\r\n            const firstImageElement = document.querySelector(`#image-0`);\r\n            if (firstImageElement) {\r\n                const clickEvent = new MouseEvent('click', {\r\n                    bubbles: true,\r\n                    cancelable: true,\r\n                });\r\n                firstImageElement.dispatchEvent(clickEvent);\r\n            }\r\n        }\r\n    }, [images]);\r\n    useEffect(() => {\r\n        const track = trackRef.current;\r\n        if (!track) return;\r\n\r\n        const handleOnDown = (e) => {\r\n            if (isFullScreen) return;\r\n            \r\n            const clientX = e.clientX || (e.touches && e.touches[0]?.clientX);\r\n            setSliderState(prev => ({\r\n                ...prev,\r\n                mouseDownAt: clientX\r\n            }));\r\n        };\r\n\r\n        const handleOnUp = () => {\r\n            if (isFullScreen) return;\r\n            \r\n            setSliderState(prev => ({\r\n                ...prev,\r\n                mouseDownAt: 0,\r\n                prevPercentage: prev.percentage\r\n            }));\r\n        };\r\n\r\n        const handleOnMove = (e) => {\r\n            if (isFullScreen) return;\r\n            \r\n            const clientX = e.clientX || (e.touches && e.touches[0]?.clientX);\r\n            \r\n            if (sliderState.mouseDownAt === 0) return;\r\n\r\n            const mouseDelta = sliderState.mouseDownAt - clientX;\r\n            const maxDelta = window.innerWidth / 0.8;\r\n\r\n            const percentage = (mouseDelta / maxDelta) * -100;\r\n            const nextPercentageUnconstrained = sliderState.prevPercentage + percentage;\r\n            const nextPercentage = Math.max(Math.min(nextPercentageUnconstrained, 0), -95);\r\n\r\n            setSliderState(prev => ({\r\n                ...prev,\r\n                percentage: nextPercentage\r\n            }));\r\n\r\n            if (track) {\r\n                requestAnimationFrame(() => {\r\n                    track.animate(\r\n                        {\r\n                            transform: `translate(${nextPercentage}%, -50%)`\r\n                        },\r\n                        { \r\n                            duration: 600, \r\n                            fill: 'forwards',\r\n                            easing: 'cubic-bezier(0.25, 0.1, 0.25, 1)' \r\n                        }\r\n                    );\r\n\r\n                    const images = track.getElementsByClassName(\"image\");\r\n                    Array.from(images).forEach((image) => {\r\n                        image.animate(\r\n                            {\r\n                                objectPosition: `${100 + nextPercentage * 1.1}% center`\r\n                            },\r\n                            { \r\n                                duration: 600, \r\n                                fill: 'forwards',\r\n                                easing: 'cubic-bezier(0.25, 0.1, 0.25, 1)'\r\n                            }\r\n                        );\r\n                    });\r\n                });\r\n            }\r\n        };\r\n\r\n        window.addEventListener('mousedown', handleOnDown);\r\n        window.addEventListener('mousemove', handleOnMove);\r\n        window.addEventListener('mouseup', handleOnUp);\r\n        \r\n        window.addEventListener('touchstart', handleOnDown);\r\n        window.addEventListener('touchmove', handleOnMove);\r\n        window.addEventListener('touchend', handleOnUp);\r\n        \r\n        return () => {\r\n            window.removeEventListener('mousedown', handleOnDown);\r\n            window.removeEventListener('mousemove', handleOnMove);\r\n            window.removeEventListener('mouseup', handleOnUp);\r\n            \r\n            window.removeEventListener('touchstart', handleOnDown);\r\n            window.removeEventListener('touchmove', handleOnMove);\r\n            window.removeEventListener('touchend', handleOnUp);\r\n        };\r\n    }, [isFullScreen, sliderState]);\r\n\r\n    const handleImageClick = (e, src, index) => {\r\n        // If already in full screen and clicking the same image, close it\r\n        if (isFullScreen && selectedImage === src) {\r\n            setIsFullScreen(false);\r\n            setSelectedImage(null);\r\n            return;\r\n        }\r\n\r\n        // Capture the exact state of the image at click\r\n        const imgElement = e.target;\r\n        const rect = imgElement.getBoundingClientRect();\r\n        \r\n        // Get computed style to capture exact object-position\r\n        const computedStyle = window.getComputedStyle(imgElement);\r\n        const objectPosition = computedStyle.objectPosition;\r\n\r\n        setImageTransitionState({\r\n            rect: {\r\n                top: rect.top,\r\n                left: rect.left,\r\n                width: rect.width,\r\n                height: rect.height\r\n            },\r\n            objectPosition,\r\n            scale: 1  // Matches the hover scale\r\n        });\r\n\r\n        // Set full screen state\r\n        setSelectedImage(src);\r\n        setSelectedIndex(index);\r\n        setIsFullScreen(true);\r\n    };\r\n\r\n    const images = Array.from({ length: 7 }, (_, index) => `/images/${index + 1}.jpg`);\r\n\r\n    return (\r\n        <LayoutGroup>\r\n            <div \r\n                id=\"image-track\" \r\n                ref={trackRef} \r\n                style={{ \r\n                    transform: `translate(${sliderState.percentage}%, -50%)` \r\n                }}\r\n            >\r\n                {images.map((src, index) => (\r\n                    <motion.img\r\n                        layoutId={`image-${index}`}\r\n                        key={src}\r\n                        className=\"image\"\r\n                        src={src}\r\n                        alt={`Image ${index + 1}`}\r\n                        draggable=\"false\"\r\n                        onClick={(e) => handleImageClick(e, src, index)}\r\n                        whileHover={{ scale: 1.05, duration: 2}}\r\n                        style={{\r\n                            cursor: 'pointer',\r\n                            willChange: 'transform',\r\n                        }}\r\n                    />\r\n                ))}\r\n            </div>\r\n\r\n            <AnimatePresence>\r\n                {isFullScreen && imageTransitionState.rect && (\r\n                    <motion.div\r\n                        initial={{\r\n                            position: 'fixed',\r\n                            top: imageTransitionState.rect.top,\r\n                            left: imageTransitionState.rect.left,\r\n                            width: imageTransitionState.rect.width,\r\n                            height: imageTransitionState.rect.height,\r\n                            scale: imageTransitionState.scale,\r\n                            backgroundColor: 'black',\r\n                            zIndex: 1000,\r\n                            overflow: 'hidden'\r\n                        }}\r\n                        animate={{\r\n                            top: 0,\r\n                            left: 0,\r\n                            width: '100vw',\r\n                            height: '100vh',\r\n                            scale: 1\r\n                        }}\r\n                        exit={{\r\n                            top: imageTransitionState.rect.top,\r\n                            left: imageTransitionState.rect.left,\r\n                            width: imageTransitionState.rect.width,\r\n                            height: imageTransitionState.rect.height,\r\n                            scale: imageTransitionState.scale\r\n                        }}\r\n                        transition={{\r\n                            duration: 0.4,\r\n                            type: \"tween\"\r\n                        }}\r\n                        onClick={() => setIsFullScreen(false)}\r\n                    >\r\n                        <motion.img\r\n                            src={selectedImage}\r\n                            style={{\r\n                                width: '100%',\r\n                                height: '100%',\r\n                                objectFit: 'cover',\r\n                                objectPosition: imageTransitionState.objectPosition,\r\n                                transform: `scale(${imageTransitionState.scale})`,\r\n                                transformOrigin: 'center center'\r\n                            }}\r\n                        />\r\n                    </motion.div>\r\n                )}\r\n            </AnimatePresence>\r\n        </LayoutGroup>\r\n    );\r\n};\r\n\r\nexport default ImageSlider;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}