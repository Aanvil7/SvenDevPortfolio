{"ast":null,"code":"var _jsxFileName = \"D:\\\\VSC Projects\\\\SvenDevPortfolio-1\\\\src\\\\components\\\\ImageSlider.tsx\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useEffect, useRef, useState } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ImageSlider = () => {\n  _s();\n  const trackRef = useRef(null);\n  const [isFullScreen, setIsFullScreen] = useState(false);\n  const [selectedImage, setSelectedImage] = useState(null);\n  const [sliderState, setSliderState] = useState({\n    mouseDownAt: 0,\n    prevPercentage: 0,\n    percentage: 0\n  });\n\n  // Memoize image array to prevent unnecessary re-renders\n  const images = React.useMemo(() => Array.from({\n    length: 15\n  }, (_, index) => `/images/${index + 1}.webp`), []);\n  const handleImageClick = useCallback(src => {\n    if (isFullScreen && selectedImage === src) {\n      setIsFullScreen(false);\n      setSelectedImage(null);\n    } else {\n      setSelectedImage(src);\n      setIsFullScreen(true);\n    }\n  }, [isFullScreen, selectedImage]);\n  const handleSliderInteraction = useCallback(e => {\n    var _e$touches$;\n    if (isFullScreen) return;\n    const track = trackRef.current;\n    if (!track) return;\n    const clientX = e.touches ? (_e$touches$ = e.touches[0]) === null || _e$touches$ === void 0 ? void 0 : _e$touches$.clientX : e.clientX;\n    if (sliderState.mouseDownAt === 0) return;\n    const mouseDelta = sliderState.mouseDownAt - clientX;\n    const maxDelta = window.innerWidth / 2;\n    const percentage = mouseDelta / maxDelta * -100;\n    const nextPercentageUnconstrained = sliderState.prevPercentage + percentage;\n    const nextPercentage = Math.max(Math.min(nextPercentageUnconstrained, 0), -100);\n\n    // Use state update for percentage\n    setSliderState(prev => ({\n      ...prev,\n      percentage: nextPercentage\n    }));\n\n    // Optimize DOM manipulation\n    requestAnimationFrame(() => {\n      track.style.transform = `translate(${nextPercentage}%, -50%)`;\n      const images = track.getElementsByClassName(\"image\");\n      Array.from(images).forEach(image => {\n        image.style.objectPosition = `${100 + nextPercentage}% center`;\n      });\n    });\n  }, [isFullScreen, sliderState]);\n  useEffect(() => {\n    const handleMouseDown = e => {\n      var _e$touches$2;\n      if (isFullScreen) return;\n      const clientX = e.touches ? (_e$touches$2 = e.touches[0]) === null || _e$touches$2 === void 0 ? void 0 : _e$touches$2.clientX : e.clientX;\n      setSliderState(prev => ({\n        ...prev,\n        mouseDownAt: clientX\n      }));\n    };\n    const handleMouseUp = () => {\n      if (isFullScreen) return;\n      setSliderState(prev => ({\n        ...prev,\n        mouseDownAt: 0,\n        prevPercentage: prev.percentage\n      }));\n    };\n\n    // Optimize event listeners\n    const events = [{\n      type: 'mousedown',\n      handler: handleMouseDown\n    }, {\n      type: 'mousemove',\n      handler: handleSliderInteraction\n    }, {\n      type: 'mouseup',\n      handler: handleMouseUp\n    }, {\n      type: 'touchstart',\n      handler: handleMouseDown\n    }, {\n      type: 'touchmove',\n      handler: handleSliderInteraction\n    }, {\n      type: 'touchend',\n      handler: handleMouseUp\n    }];\n    events.forEach(({\n      type,\n      handler\n    }) => {\n      window.addEventListener(type, handler);\n    });\n    return () => {\n      events.forEach(({\n        type,\n        handler\n      }) => {\n        window.removeEventListener(type, handler);\n      });\n    };\n  }, [isFullScreen, handleSliderInteraction]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"image-track\",\n      ref: trackRef,\n      style: {\n        transform: `translate(${sliderState.percentage}%, -50%)`,\n        willChange: 'transform' // Hint for browser optimization\n      },\n      children: images.map((src, index) => /*#__PURE__*/_jsxDEV(motion.img, {\n        className: \"image\",\n        src: src,\n        alt: `Image ${index + 1}`,\n        draggable: \"false\",\n        onClick: () => handleImageClick(src),\n        whileHover: {\n          scale: 1.05\n        },\n        style: {\n          cursor: 'pointer',\n          willChange: 'transform',\n          contain: 'layout paint style' // Performance optimization\n        }\n      }, src, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(AnimatePresence, {\n      children: isFullScreen && selectedImage && /*#__PURE__*/_jsxDEV(motion.div, {\n        initial: {\n          opacity: 0\n        },\n        animate: {\n          opacity: 1\n        },\n        exit: {\n          opacity: 0\n        },\n        onClick: () => setIsFullScreen(false),\n        style: {\n          position: 'fixed',\n          top: 0,\n          left: 0,\n          width: '100vw',\n          height: '100vh',\n          backgroundColor: 'rgba(0,0,0,0.9)',\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n          zIndex: 1000\n        },\n        children: /*#__PURE__*/_jsxDEV(motion.img, {\n          src: selectedImage,\n          style: {\n            maxWidth: '90%',\n            maxHeight: '90%',\n            objectFit: 'contain'\n          },\n          initial: {\n            scale: 0.8,\n            opacity: 0\n          },\n          animate: {\n            scale: 1,\n            opacity: 1\n          },\n          exit: {\n            scale: 0.8,\n            opacity: 0\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(ImageSlider, \"hPh6iqW16jeZfOuKLsKpCnMVa4U=\");\n_c = ImageSlider;\nexport default ImageSlider;\nvar _c;\n$RefreshReg$(_c, \"ImageSlider\");","map":{"version":3,"names":["React","useCallback","useEffect","useRef","useState","motion","AnimatePresence","jsxDEV","_jsxDEV","Fragment","_Fragment","ImageSlider","_s","trackRef","isFullScreen","setIsFullScreen","selectedImage","setSelectedImage","sliderState","setSliderState","mouseDownAt","prevPercentage","percentage","images","useMemo","Array","from","length","_","index","handleImageClick","src","handleSliderInteraction","e","_e$touches$","track","current","clientX","touches","mouseDelta","maxDelta","window","innerWidth","nextPercentageUnconstrained","nextPercentage","Math","max","min","prev","requestAnimationFrame","style","transform","getElementsByClassName","forEach","image","objectPosition","handleMouseDown","_e$touches$2","handleMouseUp","events","type","handler","addEventListener","removeEventListener","children","id","ref","willChange","map","img","className","alt","draggable","onClick","whileHover","scale","cursor","contain","fileName","_jsxFileName","lineNumber","columnNumber","div","initial","opacity","animate","exit","position","top","left","width","height","backgroundColor","display","justifyContent","alignItems","zIndex","maxWidth","maxHeight","objectFit","_c","$RefreshReg$"],"sources":["D:/VSC Projects/SvenDevPortfolio-1/src/components/ImageSlider.tsx"],"sourcesContent":["import React, { useCallback, useEffect, useRef, useState } from 'react';\r\nimport { motion, AnimatePresence } from 'framer-motion';\r\n\r\nconst ImageSlider = () => {\r\n    const trackRef = useRef(null);\r\n    const [isFullScreen, setIsFullScreen] = useState(false);\r\n    const [selectedImage, setSelectedImage] = useState(null);\r\n    const [sliderState, setSliderState] = useState({\r\n        mouseDownAt: 0,\r\n        prevPercentage: 0,\r\n        percentage: 0\r\n    });\r\n\r\n    // Memoize image array to prevent unnecessary re-renders\r\n    const images = React.useMemo(() => \r\n        Array.from({ length: 15 }, (_, index) => `/images/${index + 1}.webp`), \r\n        []\r\n    );\r\n\r\n    const handleImageClick = useCallback((src) => {\r\n        if (isFullScreen && selectedImage === src) {\r\n            setIsFullScreen(false);\r\n            setSelectedImage(null);\r\n        } else {\r\n            setSelectedImage(src);\r\n            setIsFullScreen(true);\r\n        }\r\n    }, [isFullScreen, selectedImage]);\r\n\r\n    const handleSliderInteraction = useCallback((e) => {\r\n        if (isFullScreen) return;\r\n\r\n        const track = trackRef.current;\r\n        if (!track) return;\r\n\r\n        const clientX = e.touches \r\n            ? e.touches[0]?.clientX \r\n            : e.clientX;\r\n\r\n        if (sliderState.mouseDownAt === 0) return;\r\n\r\n        const mouseDelta = sliderState.mouseDownAt - clientX;\r\n        const maxDelta = window.innerWidth / 2;\r\n\r\n        const percentage = (mouseDelta / maxDelta) * -100;\r\n        const nextPercentageUnconstrained = sliderState.prevPercentage + percentage;\r\n        const nextPercentage = Math.max(Math.min(nextPercentageUnconstrained, 0), -100);\r\n\r\n        // Use state update for percentage\r\n        setSliderState(prev => ({\r\n            ...prev,\r\n            percentage: nextPercentage\r\n        }));\r\n\r\n        // Optimize DOM manipulation\r\n        requestAnimationFrame(() => {\r\n            track.style.transform = `translate(${nextPercentage}%, -50%)`;\r\n            \r\n            const images = track.getElementsByClassName(\"image\");\r\n            Array.from(images).forEach((image) => {\r\n                image.style.objectPosition = \r\n                    `${100 + nextPercentage}% center`;\r\n            });\r\n        });\r\n    }, [isFullScreen, sliderState]);\r\n\r\n    useEffect(() => {\r\n        const handleMouseDown = (e) => {\r\n            if (isFullScreen) return;\r\n            \r\n            const clientX = e.touches \r\n                ? e.touches[0]?.clientX \r\n                : e.clientX;\r\n            \r\n            setSliderState(prev => ({\r\n                ...prev,\r\n                mouseDownAt: clientX\r\n            }));\r\n        };\r\n\r\n        const handleMouseUp = () => {\r\n            if (isFullScreen) return;\r\n            \r\n            setSliderState(prev => ({\r\n                ...prev,\r\n                mouseDownAt: 0,\r\n                prevPercentage: prev.percentage\r\n            }));\r\n        };\r\n\r\n        // Optimize event listeners\r\n        const events = [\r\n            { type: 'mousedown', handler: handleMouseDown },\r\n            { type: 'mousemove', handler: handleSliderInteraction },\r\n            { type: 'mouseup', handler: handleMouseUp },\r\n            { type: 'touchstart', handler: handleMouseDown },\r\n            { type: 'touchmove', handler: handleSliderInteraction },\r\n            { type: 'touchend', handler: handleMouseUp }\r\n        ];\r\n\r\n        events.forEach(({ type, handler }) => {\r\n            window.addEventListener(type, handler);\r\n        });\r\n\r\n        return () => {\r\n            events.forEach(({ type, handler }) => {\r\n                window.removeEventListener(type, handler);\r\n            });\r\n        };\r\n    }, [isFullScreen, handleSliderInteraction]);\r\n\r\n    return (\r\n        <>\r\n            <div \r\n                id=\"image-track\" \r\n                ref={trackRef} \r\n                style={{ \r\n                    transform: `translate(${sliderState.percentage}%, -50%)`,\r\n                    willChange: 'transform' // Hint for browser optimization\r\n                }}\r\n            >\r\n                {images.map((src, index) => (\r\n                    <motion.img\r\n                        key={src}\r\n                        className=\"image\"\r\n                        src={src}\r\n                        alt={`Image ${index + 1}`}\r\n                        draggable=\"false\"\r\n                        onClick={() => handleImageClick(src)}\r\n                        whileHover={{ scale: 1.05 }}\r\n                        style={{\r\n                            cursor: 'pointer',\r\n                            willChange: 'transform',\r\n                            contain: 'layout paint style' // Performance optimization\r\n                        }}\r\n                    />\r\n                ))}\r\n            </div>\r\n\r\n            <AnimatePresence>\r\n                {isFullScreen && selectedImage && (\r\n                    <motion.div\r\n                        initial={{ opacity: 0 }}\r\n                        animate={{ opacity: 1 }}\r\n                        exit={{ opacity: 0 }}\r\n                        onClick={() => setIsFullScreen(false)}\r\n                        style={{\r\n                            position: 'fixed',\r\n                            top: 0,\r\n                            left: 0,\r\n                            width: '100vw',\r\n                            height: '100vh',\r\n                            backgroundColor: 'rgba(0,0,0,0.9)',\r\n                            display: 'flex',\r\n                            justifyContent: 'center',\r\n                            alignItems: 'center',\r\n                            zIndex: 1000\r\n                        }}\r\n                    >\r\n                        <motion.img\r\n                            src={selectedImage}\r\n                            style={{\r\n                                maxWidth: '90%',\r\n                                maxHeight: '90%',\r\n                                objectFit: 'contain'\r\n                            }}\r\n                            initial={{ scale: 0.8, opacity: 0 }}\r\n                            animate={{ scale: 1, opacity: 1 }}\r\n                            exit={{ scale: 0.8, opacity: 0 }}\r\n                        />\r\n                    </motion.div>\r\n                )}\r\n            </AnimatePresence>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ImageSlider;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}