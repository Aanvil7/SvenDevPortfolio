{"ast":null,"code":"var _jsxFileName = \"D:\\\\VSC Projects\\\\SvenDevPortfolio-2\\\\src\\\\components\\\\ImageSlider\\\\ImageSlider.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport { motion, AnimatePresence, LayoutGroup } from 'framer-motion';\nimport './ImageSliderStyles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ImageSlider = ({\n  startFullScreen = false,\n  initialImage = null\n}) => {\n  _s();\n  const trackRef = useRef(null);\n  const [isFullScreen, setIsFullScreen] = useState(startFullScreen);\n  const [selectedImage, setSelectedImage] = useState(initialImage);\n  const [selectedIndex, setSelectedIndex] = useState(null);\n  const [imageTransitionState, setImageTransitionState] = useState({\n    rect: startFullScreen ? {\n      top: 0,\n      left: 0,\n      width: window.innerWidth,\n      height: window.innerHeight\n    } : null,\n    objectPosition: '100% center',\n    scale: 1\n  });\n  const [sliderState, setSliderState] = useState({\n    mouseDownAt: 0,\n    prevPercentage: 0,\n    percentage: 0\n  });\n  useEffect(() => {\n    if (startFullScreen && initialImage) {\n      setIsFullScreen(true);\n      setSelectedImage(initialImage);\n      setImageTransitionState({\n        rect: {\n          top: 0,\n          left: 0,\n          width: window.innerWidth,\n          height: window.innerHeight\n        },\n        objectPosition: '100% center',\n        scale: 1\n      });\n    }\n  }, [startFullScreen, initialImage]);\n  useEffect(() => {\n    const track = trackRef.current;\n    if (!track) return;\n    const handleOnDown = e => {\n      var _e$touches$;\n      if (isFullScreen) return;\n      const clientX = e.clientX || e.touches && ((_e$touches$ = e.touches[0]) === null || _e$touches$ === void 0 ? void 0 : _e$touches$.clientX);\n      setSliderState(prev => ({\n        ...prev,\n        mouseDownAt: clientX\n      }));\n    };\n    const handleOnUp = () => {\n      if (isFullScreen) return;\n      setSliderState(prev => ({\n        ...prev,\n        mouseDownAt: 0,\n        prevPercentage: prev.percentage\n      }));\n    };\n    const handleOnMove = e => {\n      var _e$touches$2;\n      if (isFullScreen) return;\n      const clientX = e.clientX || e.touches && ((_e$touches$2 = e.touches[0]) === null || _e$touches$2 === void 0 ? void 0 : _e$touches$2.clientX);\n      if (sliderState.mouseDownAt === 0) return;\n      const mouseDelta = sliderState.mouseDownAt - clientX;\n      const maxDelta = window.innerWidth / 0.8;\n      const percentage = mouseDelta / maxDelta * -100;\n      const nextPercentageUnconstrained = sliderState.prevPercentage + percentage;\n      const nextPercentage = Math.max(Math.min(nextPercentageUnconstrained, 0), -95);\n      setSliderState(prev => ({\n        ...prev,\n        percentage: nextPercentage\n      }));\n      track.animate({\n        transform: `translate(${nextPercentage}%, -50%)`\n      }, {\n        duration: 600,\n        fill: 'forwards',\n        easing: 'cubic-bezier(0.25, 0.1, 0.25, 1)'\n      });\n      const images = track.getElementsByClassName(\"image\");\n      Array.from(images).forEach(image => {\n        image.animate({\n          objectPosition: `${100 + nextPercentage * 1.1}% center`\n        }, {\n          duration: 600,\n          fill: 'forwards',\n          easing: 'cubic-bezier(0.25, 0.1, 0.25, 1)'\n        });\n      });\n    };\n    window.addEventListener('mousedown', handleOnDown);\n    window.addEventListener('mousemove', handleOnMove);\n    window.addEventListener('mouseup', handleOnUp);\n    window.addEventListener('touchstart', handleOnDown);\n    window.addEventListener('touchmove', handleOnMove);\n    window.addEventListener('touchend', handleOnUp);\n\n    // **Auto-click first image on mount if not already fullscreen**\n    if (!isFullScreen && !selectedImage && track) {\n      const firstImage = track.querySelector('.image');\n      if (firstImage) {\n        const rect = firstImage.getBoundingClientRect();\n        const computedStyle = window.getComputedStyle(firstImage);\n        const objectPosition = computedStyle.objectPosition;\n        setImageTransitionState({\n          rect: {\n            top: rect.top,\n            left: rect.left,\n            width: rect.width,\n            height: rect.height\n          },\n          objectPosition,\n          scale: 1\n        });\n        setSelectedImage(firstImage.src);\n        setIsFullScreen(true);\n      }\n    }\n    return () => {\n      window.removeEventListener('mousedown', handleOnDown);\n      window.removeEventListener('mousemove', handleOnMove);\n      window.removeEventListener('mouseup', handleOnUp);\n      window.removeEventListener('touchstart', handleOnDown);\n      window.removeEventListener('touchmove', handleOnMove);\n      window.removeEventListener('touchend', handleOnUp);\n    };\n  }, [isFullScreen, sliderState]);\n  const handleImageClick = (e, src, index) => {\n    if (isFullScreen && selectedImage === src) {\n      setIsFullScreen(false);\n      setSelectedImage(null);\n      setImageTransitionState(prev => ({\n        ...prev,\n        rect: null\n      }));\n      return;\n    }\n    const imgElement = e.target;\n    const rect = imgElement.getBoundingClientRect();\n    const computedStyle = window.getComputedStyle(imgElement);\n    const objectPosition = computedStyle.objectPosition;\n    setImageTransitionState({\n      rect: {\n        top: rect.top,\n        left: rect.left,\n        width: rect.width,\n        height: rect.height\n      },\n      objectPosition,\n      scale: 1\n    });\n    setSelectedImage(src);\n    setSelectedIndex(index);\n    setIsFullScreen(true);\n  };\n  const handleFullScreenClose = () => {\n    setIsFullScreen(false);\n    setSelectedImage(null);\n    setImageTransitionState(prev => ({\n      ...prev,\n      rect: null\n    }));\n  };\n  const images = Array.from({\n    length: 7\n  }, (_, index) => `/images/${index + 1}.jpg`);\n  return /*#__PURE__*/_jsxDEV(LayoutGroup, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"image-track\",\n      ref: trackRef,\n      style: {\n        transform: `translate(${sliderState.percentage}%, -50%)`,\n        opacity: isFullScreen ? 0 : 1,\n        transition: 'opacity 0.4s ease-in-out'\n      },\n      children: images.map((src, index) => /*#__PURE__*/_jsxDEV(motion.img, {\n        layoutId: `image-${index}`,\n        className: \"image\",\n        src: src,\n        alt: `Image ${index + 1}`,\n        draggable: \"false\",\n        onClick: e => handleImageClick(e, src, index),\n        whileHover: {\n          scale: 1.05\n        },\n        style: {\n          cursor: 'pointer',\n          willChange: 'transform'\n        }\n      }, src, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(AnimatePresence, {\n      children: isFullScreen && imageTransitionState.rect && /*#__PURE__*/_jsxDEV(motion.div, {\n        initial: {\n          position: 'fixed',\n          top: imageTransitionState.rect.top,\n          left: imageTransitionState.rect.left,\n          width: imageTransitionState.rect.width,\n          height: imageTransitionState.rect.height,\n          scale: imageTransitionState.scale,\n          backgroundColor: 'black',\n          zIndex: 1000,\n          overflow: 'hidden'\n        },\n        animate: {\n          top: 0,\n          left: 0,\n          width: '100vw',\n          height: '100vh',\n          scale: 1\n        },\n        exit: {\n          top: imageTransitionState.rect.top,\n          left: imageTransitionState.rect.left,\n          width: imageTransitionState.rect.width,\n          height: imageTransitionState.rect.height,\n          scale: imageTransitionState.scale\n        },\n        transition: {\n          duration: 0.4,\n          ease: \"easeInOut\"\n        },\n        onClick: handleFullScreenClose,\n        children: /*#__PURE__*/_jsxDEV(motion.img, {\n          src: selectedImage,\n          style: {\n            width: '100%',\n            height: '100%',\n            objectFit: 'cover',\n            objectPosition: imageTransitionState.objectPosition,\n            transform: `scale(${imageTransitionState.scale})`,\n            transformOrigin: 'center center'\n          },\n          alt: \"Full screen view\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 154,\n    columnNumber: 9\n  }, this);\n};\n_s(ImageSlider, \"8RcsBqZ7dHXWniOt25IV/hFjzCg=\");\n_c = ImageSlider;\nexport default ImageSlider;\nvar _c;\n$RefreshReg$(_c, \"ImageSlider\");","map":{"version":3,"names":["React","useEffect","useRef","useState","motion","AnimatePresence","LayoutGroup","jsxDEV","_jsxDEV","ImageSlider","startFullScreen","initialImage","_s","trackRef","isFullScreen","setIsFullScreen","selectedImage","setSelectedImage","selectedIndex","setSelectedIndex","imageTransitionState","setImageTransitionState","rect","top","left","width","window","innerWidth","height","innerHeight","objectPosition","scale","sliderState","setSliderState","mouseDownAt","prevPercentage","percentage","track","current","handleOnDown","e","_e$touches$","clientX","touches","prev","handleOnUp","handleOnMove","_e$touches$2","mouseDelta","maxDelta","nextPercentageUnconstrained","nextPercentage","Math","max","min","animate","transform","duration","fill","easing","images","getElementsByClassName","Array","from","forEach","image","addEventListener","firstImage","querySelector","getBoundingClientRect","computedStyle","getComputedStyle","src","removeEventListener","handleImageClick","index","imgElement","target","handleFullScreenClose","length","_","children","id","ref","style","opacity","transition","map","img","layoutId","className","alt","draggable","onClick","whileHover","cursor","willChange","fileName","_jsxFileName","lineNumber","columnNumber","div","initial","position","backgroundColor","zIndex","overflow","exit","ease","objectFit","transformOrigin","_c","$RefreshReg$"],"sources":["D:/VSC Projects/SvenDevPortfolio-2/src/components/ImageSlider/ImageSlider.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport { motion, AnimatePresence, LayoutGroup } from 'framer-motion';\r\nimport './ImageSliderStyles.css';\r\n\r\nconst ImageSlider = ({ startFullScreen = false, initialImage = null }) => {\r\n    const trackRef = useRef(null);\r\n    const [isFullScreen, setIsFullScreen] = useState(startFullScreen);\r\n    const [selectedImage, setSelectedImage] = useState(initialImage);\r\n    const [selectedIndex, setSelectedIndex] = useState(null);\r\n    const [imageTransitionState, setImageTransitionState] = useState({\r\n        rect: startFullScreen ? {\r\n            top: 0,\r\n            left: 0,\r\n            width: window.innerWidth,\r\n            height: window.innerHeight\r\n        } : null,\r\n        objectPosition: '100% center',\r\n        scale: 1\r\n    });\r\n\r\n    const [sliderState, setSliderState] = useState({\r\n        mouseDownAt: 0,\r\n        prevPercentage: 0,\r\n        percentage: 0\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (startFullScreen && initialImage) {\r\n            setIsFullScreen(true);\r\n            setSelectedImage(initialImage);\r\n            setImageTransitionState({\r\n                rect: {\r\n                    top: 0,\r\n                    left: 0,\r\n                    width: window.innerWidth,\r\n                    height: window.innerHeight\r\n                },\r\n                objectPosition: '100% center',\r\n                scale: 1\r\n            });\r\n        }\r\n    }, [startFullScreen, initialImage]);\r\n\r\n    useEffect(() => {\r\n        const track = trackRef.current;\r\n        if (!track) return;\r\n\r\n        const handleOnDown = (e) => {\r\n            if (isFullScreen) return;\r\n            const clientX = e.clientX || (e.touches && e.touches[0]?.clientX);\r\n            setSliderState(prev => ({ ...prev, mouseDownAt: clientX }));\r\n        };\r\n\r\n        const handleOnUp = () => {\r\n            if (isFullScreen) return;\r\n            setSliderState(prev => ({ ...prev, mouseDownAt: 0, prevPercentage: prev.percentage }));\r\n        };\r\n\r\n        const handleOnMove = (e) => {\r\n            if (isFullScreen) return;\r\n            const clientX = e.clientX || (e.touches && e.touches[0]?.clientX);\r\n            if (sliderState.mouseDownAt === 0) return;\r\n\r\n            const mouseDelta = sliderState.mouseDownAt - clientX;\r\n            const maxDelta = window.innerWidth / 0.8;\r\n            const percentage = (mouseDelta / maxDelta) * -100;\r\n            const nextPercentageUnconstrained = sliderState.prevPercentage + percentage;\r\n            const nextPercentage = Math.max(Math.min(nextPercentageUnconstrained, 0), -95);\r\n\r\n            setSliderState(prev => ({ ...prev, percentage: nextPercentage }));\r\n\r\n            track.animate({ transform: `translate(${nextPercentage}%, -50%)` }, { duration: 600, fill: 'forwards', easing: 'cubic-bezier(0.25, 0.1, 0.25, 1)' });\r\n\r\n            const images = track.getElementsByClassName(\"image\");\r\n            Array.from(images).forEach((image) => {\r\n                image.animate({ objectPosition: `${100 + nextPercentage * 1.1}% center` }, { duration: 600, fill: 'forwards', easing: 'cubic-bezier(0.25, 0.1, 0.25, 1)' });\r\n            });\r\n        };\r\n\r\n        window.addEventListener('mousedown', handleOnDown);\r\n        window.addEventListener('mousemove', handleOnMove);\r\n        window.addEventListener('mouseup', handleOnUp);\r\n\r\n        window.addEventListener('touchstart', handleOnDown);\r\n        window.addEventListener('touchmove', handleOnMove);\r\n        window.addEventListener('touchend', handleOnUp);\r\n\r\n        // **Auto-click first image on mount if not already fullscreen**\r\n        if (!isFullScreen && !selectedImage && track) {\r\n            const firstImage = track.querySelector('.image');\r\n            if (firstImage) {\r\n                const rect = firstImage.getBoundingClientRect();\r\n                const computedStyle = window.getComputedStyle(firstImage);\r\n                const objectPosition = computedStyle.objectPosition;\r\n                setImageTransitionState({\r\n                    rect: {\r\n                        top: rect.top,\r\n                        left: rect.left,\r\n                        width: rect.width,\r\n                        height: rect.height\r\n                    },\r\n                    objectPosition,\r\n                    scale: 1\r\n                });\r\n                setSelectedImage(firstImage.src);\r\n                setIsFullScreen(true);\r\n            }\r\n        }\r\n\r\n        return () => {\r\n            window.removeEventListener('mousedown', handleOnDown);\r\n            window.removeEventListener('mousemove', handleOnMove);\r\n            window.removeEventListener('mouseup', handleOnUp);\r\n\r\n            window.removeEventListener('touchstart', handleOnDown);\r\n            window.removeEventListener('touchmove', handleOnMove);\r\n            window.removeEventListener('touchend', handleOnUp);\r\n        };\r\n    }, [isFullScreen, sliderState]);\r\n\r\n    const handleImageClick = (e, src, index) => {\r\n        if (isFullScreen && selectedImage === src) {\r\n            setIsFullScreen(false);\r\n            setSelectedImage(null);\r\n            setImageTransitionState(prev => ({ ...prev, rect: null }));\r\n            return;\r\n        }\r\n\r\n        const imgElement = e.target;\r\n        const rect = imgElement.getBoundingClientRect();\r\n        const computedStyle = window.getComputedStyle(imgElement);\r\n        const objectPosition = computedStyle.objectPosition;\r\n\r\n        setImageTransitionState({\r\n            rect: { top: rect.top, left: rect.left, width: rect.width, height: rect.height },\r\n            objectPosition,\r\n            scale: 1\r\n        });\r\n\r\n        setSelectedImage(src);\r\n        setSelectedIndex(index);\r\n        setIsFullScreen(true);\r\n    };\r\n\r\n    const handleFullScreenClose = () => {\r\n        setIsFullScreen(false);\r\n        setSelectedImage(null);\r\n        setImageTransitionState(prev => ({ ...prev, rect: null }));\r\n    };\r\n\r\n    const images = Array.from({ length: 7 }, (_, index) => `/images/${index + 1}.jpg`);\r\n\r\n    return (\r\n        <LayoutGroup>\r\n            <div\r\n                id=\"image-track\"\r\n                ref={trackRef}\r\n                style={{\r\n                    transform: `translate(${sliderState.percentage}%, -50%)`,\r\n                    opacity: isFullScreen ? 0 : 1,\r\n                    transition: 'opacity 0.4s ease-in-out'\r\n                }}\r\n            >\r\n                {images.map((src, index) => (\r\n                    <motion.img\r\n                        layoutId={`image-${index}`}\r\n                        key={src}\r\n                        className=\"image\"\r\n                        src={src}\r\n                        alt={`Image ${index + 1}`}\r\n                        draggable=\"false\"\r\n                        onClick={(e) => handleImageClick(e, src, index)}\r\n                        whileHover={{ scale: 1.05 }}\r\n                        style={{ cursor: 'pointer', willChange: 'transform' }}\r\n                    />\r\n                ))}\r\n            </div>\r\n\r\n            <AnimatePresence>\r\n                {isFullScreen && imageTransitionState.rect && (\r\n                    <motion.div\r\n                        initial={{\r\n                            position: 'fixed', top: imageTransitionState.rect.top, left: imageTransitionState.rect.left,\r\n                            width: imageTransitionState.rect.width, height: imageTransitionState.rect.height, scale: imageTransitionState.scale,\r\n                            backgroundColor: 'black', zIndex: 1000, overflow: 'hidden'\r\n                        }}\r\n                        animate={{ top: 0, left: 0, width: '100vw', height: '100vh', scale: 1 }}\r\n                        exit={{\r\n                            top: imageTransitionState.rect.top, left: imageTransitionState.rect.left,\r\n                            width: imageTransitionState.rect.width, height: imageTransitionState.rect.height, scale: imageTransitionState.scale\r\n                        }}\r\n                        transition={{ duration: 0.4, ease: \"easeInOut\" }}\r\n                        onClick={handleFullScreenClose}\r\n                    >\r\n                        <motion.img\r\n                            src={selectedImage}\r\n                            style={{ width: '100%', height: '100%', objectFit: 'cover', objectPosition: imageTransitionState.objectPosition, transform: `scale(${imageTransitionState.scale})`, transformOrigin: 'center center' }}\r\n                            alt=\"Full screen view\"\r\n                        />\r\n                    </motion.div>\r\n                )}\r\n            </AnimatePresence>\r\n        </LayoutGroup>\r\n    );\r\n};\r\n\r\nexport default ImageSlider;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}