{"ast":null,"code":"var _jsxFileName = \"D:\\\\VSC Projects\\\\SvenDevPortfolio-1\\\\src\\\\components\\\\ImageSlider.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState, useMemo, useCallback } from 'react';\nimport { motion, AnimatePresence, LayoutGroup } from 'framer-motion';\nimport '../styles/ImageSliderStyles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ImageSlider = () => {\n  _s();\n  const trackRef = useRef(null);\n  const [isFullScreen, setIsFullScreen] = useState(false);\n  const [selectedImage, setSelectedImage] = useState(null);\n  const [selectedIndex, setSelectedIndex] = useState(null);\n\n  // Memoize images to prevent unnecessary re-renders\n  const images = useMemo(() => Array.from({\n    length: 10\n  }, (_, index) => `/images/${index + 1}.jpg`), []);\n  const [sliderState, setSliderState] = useState({\n    mouseDownAt: 0,\n    prevPercentage: 0,\n    percentage: 0\n  });\n\n  // Optimize slider movement using CSS transform for better performance\n  useEffect(() => {\n    const track = trackRef.current;\n    if (!track) return;\n\n    // Use requestAnimationFrame to optimize rendering\n    const updateTrackPosition = () => {\n      if (track) {\n        track.style.transform = `translate(${sliderState.percentage}%, -50%)`;\n        const images = track.getElementsByClassName(\"image\");\n        Array.from(images).forEach(image => {\n          image.style.objectPosition = `${100 + sliderState.percentage}% center`;\n        });\n      }\n    };\n    requestAnimationFrame(updateTrackPosition);\n  }, [sliderState.percentage]);\n\n  // Simplified event handling with reduced computational overhead\n  const handleSliderInteraction = useCallback((type, e) => {\n    var _e$touches$;\n    if (isFullScreen) return;\n    const clientX = e.clientX || e.touches && ((_e$touches$ = e.touches[0]) === null || _e$touches$ === void 0 ? void 0 : _e$touches$.clientX);\n    switch (type) {\n      case 'down':\n        setSliderState(prev => ({\n          ...prev,\n          mouseDownAt: clientX\n        }));\n        break;\n      case 'up':\n        setSliderState(prev => ({\n          ...prev,\n          mouseDownAt: 0,\n          prevPercentage: prev.percentage\n        }));\n        break;\n      case 'move':\n        if (sliderState.mouseDownAt === 0) return;\n        const mouseDelta = sliderState.mouseDownAt - clientX;\n        const maxDelta = window.innerWidth / 2;\n        const percentage = mouseDelta / maxDelta * -100;\n        const nextPercentageUnconstrained = sliderState.prevPercentage + percentage;\n        const nextPercentage = Math.max(Math.min(nextPercentageUnconstrained, 0), -100);\n        setSliderState(prev => ({\n          ...prev,\n          percentage: nextPercentage\n        }));\n        break;\n    }\n  }, [isFullScreen]);\n\n  // Attach event listeners more efficiently\n  useEffect(() => {\n    const eventTypes = {\n      mousedown: 'down',\n      mousemove: 'move',\n      mouseup: 'up',\n      touchstart: 'down',\n      touchmove: 'move',\n      touchend: 'up'\n    };\n    const handleEvent = type => e => handleSliderInteraction(type, e);\n    const events = Object.keys(eventTypes);\n    events.forEach(eventName => {\n      window.addEventListener(eventName, handleEvent(eventTypes[eventName]));\n    });\n    return () => {\n      events.forEach(eventName => {\n        window.removeEventListener(eventName, handleEvent(eventTypes[eventName]));\n      });\n    };\n  }, [handleSliderInteraction]);\n  const handleImageClick = useCallback((e, src, index) => {\n    // If already in full screen and clicking the same image, close it\n    if (isFullScreen && selectedImage === src) {\n      setIsFullScreen(false);\n      setSelectedImage(null);\n      return;\n    }\n\n    // Capture the exact state of the image at click\n    const imgElement = e.target;\n    const rect = imgElement.getBoundingClientRect();\n\n    // Get computed style to capture exact object-position\n    const computedStyle = window.getComputedStyle(imgElement);\n    const objectPosition = computedStyle.objectPosition;\n\n    // Simplified transition state\n    setSelectedImage(src);\n    setSelectedIndex(index);\n    setIsFullScreen(true);\n  }, [isFullScreen, selectedImage]);\n  return /*#__PURE__*/_jsxDEV(LayoutGroup, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"image-track\",\n      ref: trackRef,\n      style: {\n        transform: `translate(${sliderState.percentage}%, -50%)`\n      },\n      children: images.map((src, index) => /*#__PURE__*/_jsxDEV(motion.img, {\n        className: \"image\",\n        src: src,\n        alt: `Image ${index + 1}`,\n        draggable: \"false\",\n        onClick: e => handleImageClick(e, src, index),\n        whileHover: {\n          scale: 1.05\n        },\n        style: {\n          cursor: 'pointer',\n          willChange: 'transform'\n        }\n      }, src, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(AnimatePresence, {\n      children: isFullScreen && /*#__PURE__*/_jsxDEV(motion.div, {\n        initial: {\n          opacity: 0\n        },\n        animate: {\n          opacity: 1\n        },\n        exit: {\n          opacity: 0\n        },\n        style: {\n          position: 'fixed',\n          top: 0,\n          left: 0,\n          width: '100vw',\n          height: '100vh',\n          backgroundColor: 'rgba(0,0,0,0.9)',\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n          zIndex: 1000\n        },\n        onClick: () => setIsFullScreen(false),\n        children: /*#__PURE__*/_jsxDEV(motion.img, {\n          src: selectedImage,\n          style: {\n            maxWidth: '90vw',\n            maxHeight: '90vh',\n            objectFit: 'contain'\n          },\n          initial: {\n            scale: 0.8,\n            opacity: 0\n          },\n          animate: {\n            scale: 1,\n            opacity: 1\n          },\n          exit: {\n            scale: 0.8,\n            opacity: 0\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 9\n  }, this);\n};\n_s(ImageSlider, \"VGaeEQBSMN0yYyFmU+7oNlYm8lI=\");\n_c = ImageSlider;\nexport default ImageSlider;\nvar _c;\n$RefreshReg$(_c, \"ImageSlider\");","map":{"version":3,"names":["React","useEffect","useRef","useState","useMemo","useCallback","motion","AnimatePresence","LayoutGroup","jsxDEV","_jsxDEV","ImageSlider","_s","trackRef","isFullScreen","setIsFullScreen","selectedImage","setSelectedImage","selectedIndex","setSelectedIndex","images","Array","from","length","_","index","sliderState","setSliderState","mouseDownAt","prevPercentage","percentage","track","current","updateTrackPosition","style","transform","getElementsByClassName","forEach","image","objectPosition","requestAnimationFrame","handleSliderInteraction","type","e","_e$touches$","clientX","touches","prev","mouseDelta","maxDelta","window","innerWidth","nextPercentageUnconstrained","nextPercentage","Math","max","min","eventTypes","mousedown","mousemove","mouseup","touchstart","touchmove","touchend","handleEvent","events","Object","keys","eventName","addEventListener","removeEventListener","handleImageClick","src","imgElement","target","rect","getBoundingClientRect","computedStyle","getComputedStyle","children","id","ref","map","img","className","alt","draggable","onClick","whileHover","scale","cursor","willChange","fileName","_jsxFileName","lineNumber","columnNumber","div","initial","opacity","animate","exit","position","top","left","width","height","backgroundColor","display","justifyContent","alignItems","zIndex","maxWidth","maxHeight","objectFit","_c","$RefreshReg$"],"sources":["D:/VSC Projects/SvenDevPortfolio-1/src/components/ImageSlider.js"],"sourcesContent":["import React, { useEffect, useRef, useState, useMemo, useCallback } from 'react';\r\nimport { motion, AnimatePresence, LayoutGroup } from 'framer-motion';\r\nimport '../styles/ImageSliderStyles.css';\r\n\r\nconst ImageSlider = () => {\r\n    const trackRef = useRef(null);\r\n    const [isFullScreen, setIsFullScreen] = useState(false);\r\n    const [selectedImage, setSelectedImage] = useState(null);\r\n    const [selectedIndex, setSelectedIndex] = useState(null);\r\n\r\n    // Memoize images to prevent unnecessary re-renders\r\n    const images = useMemo(() => \r\n        Array.from({ length: 10 }, (_, index) => `/images/${index + 1}.jpg`),\r\n        []\r\n    );\r\n\r\n    const [sliderState, setSliderState] = useState({\r\n        mouseDownAt: 0,\r\n        prevPercentage: 0,\r\n        percentage: 0\r\n    });\r\n\r\n    // Optimize slider movement using CSS transform for better performance\r\n    useEffect(() => {\r\n        const track = trackRef.current;\r\n        if (!track) return;\r\n\r\n        // Use requestAnimationFrame to optimize rendering\r\n        const updateTrackPosition = () => {\r\n            if (track) {\r\n                track.style.transform = `translate(${sliderState.percentage}%, -50%)`;\r\n                \r\n                const images = track.getElementsByClassName(\"image\");\r\n                Array.from(images).forEach((image) => {\r\n                    image.style.objectPosition = `${100 + sliderState.percentage}% center`;\r\n                });\r\n            }\r\n        };\r\n\r\n        requestAnimationFrame(updateTrackPosition);\r\n    }, [sliderState.percentage]);\r\n\r\n    // Simplified event handling with reduced computational overhead\r\n    const handleSliderInteraction = useCallback((type, e) => {\r\n        if (isFullScreen) return;\r\n        \r\n        const clientX = e.clientX || (e.touches && e.touches[0]?.clientX);\r\n\r\n        switch (type) {\r\n            case 'down':\r\n                setSliderState(prev => ({\r\n                    ...prev,\r\n                    mouseDownAt: clientX\r\n                }));\r\n                break;\r\n            case 'up':\r\n                setSliderState(prev => ({\r\n                    ...prev,\r\n                    mouseDownAt: 0,\r\n                    prevPercentage: prev.percentage\r\n                }));\r\n                break;\r\n            case 'move':\r\n                if (sliderState.mouseDownAt === 0) return;\r\n\r\n                const mouseDelta = sliderState.mouseDownAt - clientX;\r\n                const maxDelta = window.innerWidth / 2;\r\n\r\n                const percentage = (mouseDelta / maxDelta) * -100;\r\n                const nextPercentageUnconstrained = sliderState.prevPercentage + percentage;\r\n                const nextPercentage = Math.max(Math.min(nextPercentageUnconstrained, 0), -100);\r\n\r\n                setSliderState(prev => ({\r\n                    ...prev,\r\n                    percentage: nextPercentage\r\n                }));\r\n                break;\r\n        }\r\n    }, [isFullScreen]);\r\n\r\n    // Attach event listeners more efficiently\r\n    useEffect(() => {\r\n        const eventTypes = {\r\n            mousedown: 'down',\r\n            mousemove: 'move',\r\n            mouseup: 'up',\r\n            touchstart: 'down',\r\n            touchmove: 'move',\r\n            touchend: 'up'\r\n        };\r\n\r\n        const handleEvent = (type) => (e) => handleSliderInteraction(type, e);\r\n\r\n        const events = Object.keys(eventTypes);\r\n        events.forEach(eventName => {\r\n            window.addEventListener(eventName, handleEvent(eventTypes[eventName]));\r\n        });\r\n\r\n        return () => {\r\n            events.forEach(eventName => {\r\n                window.removeEventListener(eventName, handleEvent(eventTypes[eventName]));\r\n            });\r\n        };\r\n    }, [handleSliderInteraction]);\r\n\r\n    const handleImageClick = useCallback((e, src, index) => {\r\n        // If already in full screen and clicking the same image, close it\r\n        if (isFullScreen && selectedImage === src) {\r\n            setIsFullScreen(false);\r\n            setSelectedImage(null);\r\n            return;\r\n        }\r\n\r\n        // Capture the exact state of the image at click\r\n        const imgElement = e.target;\r\n        const rect = imgElement.getBoundingClientRect();\r\n        \r\n        // Get computed style to capture exact object-position\r\n        const computedStyle = window.getComputedStyle(imgElement);\r\n        const objectPosition = computedStyle.objectPosition;\r\n\r\n        // Simplified transition state\r\n        setSelectedImage(src);\r\n        setSelectedIndex(index);\r\n        setIsFullScreen(true);\r\n    }, [isFullScreen, selectedImage]);\r\n\r\n    return (\r\n        <LayoutGroup>\r\n            <div \r\n                id=\"image-track\" \r\n                ref={trackRef} \r\n                style={{ \r\n                    transform: `translate(${sliderState.percentage}%, -50%)` \r\n                }}\r\n            >\r\n                {images.map((src, index) => (\r\n                    <motion.img\r\n                        key={src}\r\n                        className=\"image\"\r\n                        src={src}\r\n                        alt={`Image ${index + 1}`}\r\n                        draggable=\"false\"\r\n                        onClick={(e) => handleImageClick(e, src, index)}\r\n                        whileHover={{ scale: 1.05 }}\r\n                        style={{\r\n                            cursor: 'pointer',\r\n                            willChange: 'transform',\r\n                        }}\r\n                    />\r\n                ))}\r\n            </div>\r\n\r\n            <AnimatePresence>\r\n                {isFullScreen && (\r\n                    <motion.div\r\n                        initial={{ opacity: 0 }}\r\n                        animate={{ opacity: 1 }}\r\n                        exit={{ opacity: 0 }}\r\n                        style={{\r\n                            position: 'fixed',\r\n                            top: 0,\r\n                            left: 0,\r\n                            width: '100vw',\r\n                            height: '100vh',\r\n                            backgroundColor: 'rgba(0,0,0,0.9)',\r\n                            display: 'flex',\r\n                            justifyContent: 'center',\r\n                            alignItems: 'center',\r\n                            zIndex: 1000\r\n                        }}\r\n                        onClick={() => setIsFullScreen(false)}\r\n                    >\r\n                        <motion.img\r\n                            src={selectedImage}\r\n                            style={{\r\n                                maxWidth: '90vw',\r\n                                maxHeight: '90vh',\r\n                                objectFit: 'contain'\r\n                            }}\r\n                            initial={{ scale: 0.8, opacity: 0 }}\r\n                            animate={{ scale: 1, opacity: 1 }}\r\n                            exit={{ scale: 0.8, opacity: 0 }}\r\n                        />\r\n                    </motion.div>\r\n                )}\r\n            </AnimatePresence>\r\n        </LayoutGroup>\r\n    );\r\n};\r\n\r\nexport default ImageSlider;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}