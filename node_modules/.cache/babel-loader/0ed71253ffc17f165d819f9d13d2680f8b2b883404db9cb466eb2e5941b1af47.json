{"ast":null,"code":"var _jsxFileName = \"D:\\\\VSC Projects\\\\SvenDevPortfolio-2\\\\src\\\\components\\\\ImageSlider\\\\ImageSlider.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport { motion, AnimatePresence, LayoutGroup } from 'framer-motion';\nimport '../ImageSlider/ImageSliderStyles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ImageSlider = () => {\n  _s();\n  const trackRef = useRef(null);\n  const [isFullScreen, setIsFullScreen] = useState(false);\n  const [selectedImage, setSelectedImage] = useState(null);\n  const [selectedIndex, setSelectedIndex] = useState(null);\n  const [imageTransitionState, setImageTransitionState] = useState({\n    rect: null,\n    objectPosition: '100% center',\n    scale: 1\n  });\n  const [sliderState, setSliderState] = useState({\n    mouseDownAt: 0,\n    prevPercentage: 0,\n    percentage: 0\n  });\n  const images = Array.from({\n    length: 7\n  }, (_, index) => `/images/${index + 1}.jpg`);\n\n  // Effect to simulate click on the first image on component mount or refresh\n  useEffect(() => {\n    // Simulate a click on the first image\n    if (images.length > 0) {\n      const firstImageElement = document.querySelector(`#image-0`);\n      if (firstImageElement) {\n        const clickEvent = new MouseEvent('click', {\n          bubbles: true,\n          cancelable: true\n        });\n        firstImageElement.dispatchEvent(clickEvent);\n      }\n    }\n  }, [images]);\n  const handleImageClick = (e, src, index) => {\n    // If already in full screen and clicking the same image, close it\n    if (isFullScreen && selectedImage === src) {\n      setIsFullScreen(false);\n      setSelectedImage(null);\n      return;\n    }\n\n    // Capture the exact state of the image at click\n    const imgElement = e.target;\n    const rect = imgElement.getBoundingClientRect();\n\n    // Get computed style to capture exact object-position\n    const computedStyle = window.getComputedStyle(imgElement);\n    const objectPosition = computedStyle.objectPosition;\n    setImageTransitionState({\n      rect: {\n        top: rect.top,\n        left: rect.left,\n        width: rect.width,\n        height: rect.height\n      },\n      objectPosition,\n      scale: 1 // Matches the hover scale\n    });\n\n    // Set full screen state\n    setSelectedImage(src);\n    setSelectedIndex(index);\n    setIsFullScreen(true);\n  };\n  return /*#__PURE__*/_jsxDEV(LayoutGroup, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"image-track\",\n      ref: trackRef,\n      style: {\n        transform: `translate(${sliderState.percentage}%, -50%)`\n      },\n      children: images.map((src, index) => /*#__PURE__*/_jsxDEV(motion.img, {\n        layoutId: `image-${index}`,\n        id: `image-${index}` // Add an id for targeting the image\n        ,\n        className: \"image\",\n        src: src,\n        alt: `Image ${index + 1}`,\n        draggable: \"false\",\n        onClick: e => handleImageClick(e, src, index),\n        whileHover: {\n          scale: 1.05,\n          duration: 2\n        },\n        style: {\n          cursor: 'pointer',\n          willChange: 'transform'\n        }\n      }, src, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(AnimatePresence, {\n      children: isFullScreen && imageTransitionState.rect && /*#__PURE__*/_jsxDEV(motion.div, {\n        initial: {\n          position: 'fixed',\n          top: imageTransitionState.rect.top,\n          left: imageTransitionState.rect.left,\n          width: imageTransitionState.rect.width,\n          height: imageTransitionState.rect.height,\n          scale: imageTransitionState.scale,\n          backgroundColor: 'black',\n          zIndex: 1000,\n          overflow: 'hidden'\n        },\n        animate: {\n          top: 0,\n          left: 0,\n          width: '100vw',\n          height: '100vh',\n          scale: 1\n        },\n        exit: {\n          top: imageTransitionState.rect.top,\n          left: imageTransitionState.rect.left,\n          width: imageTransitionState.rect.width,\n          height: imageTransitionState.rect.height,\n          scale: imageTransitionState.scale\n        },\n        transition: {\n          duration: 0.4,\n          type: \"tween\"\n        },\n        onClick: () => setIsFullScreen(false),\n        children: /*#__PURE__*/_jsxDEV(motion.img, {\n          src: selectedImage,\n          style: {\n            width: '100%',\n            height: '100%',\n            objectFit: 'cover',\n            objectPosition: imageTransitionState.objectPosition,\n            transform: `scale(${imageTransitionState.scale})`,\n            transformOrigin: 'center center'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 9\n  }, this);\n};\n_s(ImageSlider, \"pQTQi9MKfdLWG76GAT3MR3bgkgs=\");\n_c = ImageSlider;\nexport default ImageSlider;\nvar _c;\n$RefreshReg$(_c, \"ImageSlider\");","map":{"version":3,"names":["React","useEffect","useRef","useState","motion","AnimatePresence","LayoutGroup","jsxDEV","_jsxDEV","ImageSlider","_s","trackRef","isFullScreen","setIsFullScreen","selectedImage","setSelectedImage","selectedIndex","setSelectedIndex","imageTransitionState","setImageTransitionState","rect","objectPosition","scale","sliderState","setSliderState","mouseDownAt","prevPercentage","percentage","images","Array","from","length","_","index","firstImageElement","document","querySelector","clickEvent","MouseEvent","bubbles","cancelable","dispatchEvent","handleImageClick","e","src","imgElement","target","getBoundingClientRect","computedStyle","window","getComputedStyle","top","left","width","height","children","id","ref","style","transform","map","img","layoutId","className","alt","draggable","onClick","whileHover","duration","cursor","willChange","fileName","_jsxFileName","lineNumber","columnNumber","div","initial","position","backgroundColor","zIndex","overflow","animate","exit","transition","type","objectFit","transformOrigin","_c","$RefreshReg$"],"sources":["D:/VSC Projects/SvenDevPortfolio-2/src/components/ImageSlider/ImageSlider.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport { motion, AnimatePresence, LayoutGroup } from 'framer-motion';\r\nimport '../ImageSlider/ImageSliderStyles.css';\r\n\r\nconst ImageSlider = () => {\r\n    const trackRef = useRef(null);\r\n    const [isFullScreen, setIsFullScreen] = useState(false);\r\n    const [selectedImage, setSelectedImage] = useState(null);\r\n    const [selectedIndex, setSelectedIndex] = useState(null);\r\n    const [imageTransitionState, setImageTransitionState] = useState({\r\n        rect: null,\r\n        objectPosition: '100% center',\r\n        scale: 1\r\n    });\r\n\r\n    const [sliderState, setSliderState] = useState({\r\n        mouseDownAt: 0,\r\n        prevPercentage: 0,\r\n        percentage: 0\r\n    });\r\n\r\n    const images = Array.from({ length: 7 }, (_, index) => `/images/${index + 1}.jpg`);\r\n\r\n    // Effect to simulate click on the first image on component mount or refresh\r\n    useEffect(() => {\r\n        // Simulate a click on the first image\r\n        if (images.length > 0) {\r\n            const firstImageElement = document.querySelector(`#image-0`);\r\n            if (firstImageElement) {\r\n                const clickEvent = new MouseEvent('click', {\r\n                    bubbles: true,\r\n                    cancelable: true,\r\n                });\r\n                firstImageElement.dispatchEvent(clickEvent);\r\n            }\r\n        }\r\n    }, [images]);\r\n\r\n    const handleImageClick = (e, src, index) => {\r\n        // If already in full screen and clicking the same image, close it\r\n        if (isFullScreen && selectedImage === src) {\r\n            setIsFullScreen(false);\r\n            setSelectedImage(null);\r\n            return;\r\n        }\r\n\r\n        // Capture the exact state of the image at click\r\n        const imgElement = e.target;\r\n        const rect = imgElement.getBoundingClientRect();\r\n        \r\n        // Get computed style to capture exact object-position\r\n        const computedStyle = window.getComputedStyle(imgElement);\r\n        const objectPosition = computedStyle.objectPosition;\r\n\r\n        setImageTransitionState({\r\n            rect: {\r\n                top: rect.top,\r\n                left: rect.left,\r\n                width: rect.width,\r\n                height: rect.height\r\n            },\r\n            objectPosition,\r\n            scale: 1  // Matches the hover scale\r\n        });\r\n\r\n        // Set full screen state\r\n        setSelectedImage(src);\r\n        setSelectedIndex(index);\r\n        setIsFullScreen(true);\r\n    };\r\n\r\n    return (\r\n        <LayoutGroup>\r\n            <div \r\n                id=\"image-track\" \r\n                ref={trackRef} \r\n                style={{ \r\n                    transform: `translate(${sliderState.percentage}%, -50%)` \r\n                }}\r\n            >\r\n                {images.map((src, index) => (\r\n                    <motion.img\r\n                        layoutId={`image-${index}`}\r\n                        key={src}\r\n                        id={`image-${index}`} // Add an id for targeting the image\r\n                        className=\"image\"\r\n                        src={src}\r\n                        alt={`Image ${index + 1}`}\r\n                        draggable=\"false\"\r\n                        onClick={(e) => handleImageClick(e, src, index)}\r\n                        whileHover={{ scale: 1.05, duration: 2}}\r\n                        style={{\r\n                            cursor: 'pointer',\r\n                            willChange: 'transform',\r\n                        }}\r\n                    />\r\n                ))}\r\n            </div>\r\n\r\n            <AnimatePresence>\r\n                {isFullScreen && imageTransitionState.rect && (\r\n                    <motion.div\r\n                        initial={{\r\n                            position: 'fixed',\r\n                            top: imageTransitionState.rect.top,\r\n                            left: imageTransitionState.rect.left,\r\n                            width: imageTransitionState.rect.width,\r\n                            height: imageTransitionState.rect.height,\r\n                            scale: imageTransitionState.scale,\r\n                            backgroundColor: 'black',\r\n                            zIndex: 1000,\r\n                            overflow: 'hidden'\r\n                        }}\r\n                        animate={{\r\n                            top: 0,\r\n                            left: 0,\r\n                            width: '100vw',\r\n                            height: '100vh',\r\n                            scale: 1\r\n                        }}\r\n                        exit={{\r\n                            top: imageTransitionState.rect.top,\r\n                            left: imageTransitionState.rect.left,\r\n                            width: imageTransitionState.rect.width,\r\n                            height: imageTransitionState.rect.height,\r\n                            scale: imageTransitionState.scale\r\n                        }}\r\n                        transition={{\r\n                            duration: 0.4,\r\n                            type: \"tween\"\r\n                        }}\r\n                        onClick={() => setIsFullScreen(false)}\r\n                    >\r\n                        <motion.img\r\n                            src={selectedImage}\r\n                            style={{\r\n                                width: '100%',\r\n                                height: '100%',\r\n                                objectFit: 'cover',\r\n                                objectPosition: imageTransitionState.objectPosition,\r\n                                transform: `scale(${imageTransitionState.scale})`,\r\n                                transformOrigin: 'center center'\r\n                            }}\r\n                        />\r\n                    </motion.div>\r\n                )}\r\n            </AnimatePresence>\r\n        </LayoutGroup>\r\n    );\r\n};\r\n\r\nexport default ImageSlider;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}