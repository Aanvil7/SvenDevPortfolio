{"ast":null,"code":"var _jsxFileName = \"D:\\\\VSC Projects\\\\SvenDevPortfolio-2\\\\src\\\\components\\\\ImageSlider\\\\ImageSlider.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport { motion, AnimatePresence, LayoutGroup } from 'framer-motion';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ImageSlider = ({\n  startInFullscreen = false,\n  initialImage = null\n}) => {\n  _s();\n  const trackRef = useRef(null);\n  const [isFullScreen, setIsFullScreen] = useState(startInFullscreen);\n  const [selectedImage, setSelectedImage] = useState(initialImage);\n  const [selectedIndex, setSelectedIndex] = useState(initialImage ? 0 : null);\n  const [imageTransitionState, setImageTransitionState] = useState({\n    rect: startInFullscreen ? {\n      top: 0,\n      left: 0,\n      width: window.innerWidth,\n      height: window.innerHeight\n    } : null,\n    objectPosition: '100% center',\n    scale: 1\n  });\n  const [sliderState, setSliderState] = useState({\n    mouseDownAt: 0,\n    prevPercentage: 0,\n    percentage: 0\n  });\n\n  // Existing event handlers remain the same\n\n  const handleImageClick = (e, src, index) => {\n    if (isFullScreen && selectedImage === src) {\n      setIsFullScreen(false);\n      setSelectedImage(null);\n      return;\n    }\n    const imgElement = e.target;\n    const rect = imgElement.getBoundingClientRect();\n    const computedStyle = window.getComputedStyle(imgElement);\n    const objectPosition = computedStyle.objectPosition;\n    setImageTransitionState({\n      rect: {\n        top: rect.top,\n        left: rect.left,\n        width: rect.width,\n        height: rect.height\n      },\n      objectPosition,\n      scale: 1\n    });\n    setSelectedImage(src);\n    setSelectedIndex(index);\n    setIsFullScreen(true);\n  };\n  const images = Array.from({\n    length: 7\n  }, (_, index) => `/images/${index + 1}.jpg`);\n  return /*#__PURE__*/_jsxDEV(LayoutGroup, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"image-track\",\n      ref: trackRef,\n      style: {\n        transform: `translate(${sliderState.percentage}%, -50%)`,\n        opacity: isFullScreen ? 0 : 1\n      },\n      children: images.map((src, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image-container\",\n        children: [/*#__PURE__*/_jsxDEV(motion.img, {\n          layoutId: `image-${index}`,\n          className: \"image\",\n          src: src,\n          alt: `Image ${index + 1}`,\n          draggable: \"false\",\n          onClick: e => handleImageClick(e, src, index),\n          whileHover: {\n            scale: 1.05\n          },\n          style: {\n            cursor: 'pointer',\n            willChange: 'transform'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"hover-text\",\n          children: [\"Project \", index + 1]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 25\n        }, this)]\n      }, src, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(AnimatePresence, {\n      children: isFullScreen && imageTransitionState.rect && /*#__PURE__*/_jsxDEV(motion.div, {\n        initial: false,\n        animate: {\n          position: 'fixed',\n          top: 0,\n          left: 0,\n          width: '100vw',\n          height: '100vh',\n          scale: 1,\n          backgroundColor: 'black',\n          zIndex: 1000\n        },\n        exit: {\n          top: imageTransitionState.rect.top,\n          left: imageTransitionState.rect.left,\n          width: imageTransitionState.rect.width,\n          height: imageTransitionState.rect.height,\n          scale: imageTransitionState.scale\n        },\n        transition: {\n          duration: 0.4,\n          ease: \"easeInOut\"\n        },\n        onClick: () => setIsFullScreen(false),\n        children: /*#__PURE__*/_jsxDEV(motion.img, {\n          src: selectedImage,\n          style: {\n            width: '100%',\n            height: '100%',\n            objectFit: 'cover',\n            objectPosition: imageTransitionState.objectPosition\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n};\n_s(ImageSlider, \"51Q4XRaevBkU6QKvxIBeimP4NrI=\");\n_c = ImageSlider;\nexport default ImageSlider;\nvar _c;\n$RefreshReg$(_c, \"ImageSlider\");","map":{"version":3,"names":["React","useEffect","useRef","useState","motion","AnimatePresence","LayoutGroup","jsxDEV","_jsxDEV","ImageSlider","startInFullscreen","initialImage","_s","trackRef","isFullScreen","setIsFullScreen","selectedImage","setSelectedImage","selectedIndex","setSelectedIndex","imageTransitionState","setImageTransitionState","rect","top","left","width","window","innerWidth","height","innerHeight","objectPosition","scale","sliderState","setSliderState","mouseDownAt","prevPercentage","percentage","handleImageClick","e","src","index","imgElement","target","getBoundingClientRect","computedStyle","getComputedStyle","images","Array","from","length","_","children","id","ref","style","transform","opacity","map","className","img","layoutId","alt","draggable","onClick","whileHover","cursor","willChange","fileName","_jsxFileName","lineNumber","columnNumber","div","initial","animate","position","backgroundColor","zIndex","exit","transition","duration","ease","objectFit","_c","$RefreshReg$"],"sources":["D:/VSC Projects/SvenDevPortfolio-2/src/components/ImageSlider/ImageSlider.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport { motion, AnimatePresence, LayoutGroup } from 'framer-motion';\r\n\r\nconst ImageSlider = ({ startInFullscreen = false, initialImage = null }) => {\r\n    const trackRef = useRef(null);\r\n    const [isFullScreen, setIsFullScreen] = useState(startInFullscreen);\r\n    const [selectedImage, setSelectedImage] = useState(initialImage);\r\n    const [selectedIndex, setSelectedIndex] = useState(initialImage ? 0 : null);\r\n    const [imageTransitionState, setImageTransitionState] = useState({\r\n        rect: startInFullscreen ? {\r\n            top: 0,\r\n            left: 0,\r\n            width: window.innerWidth,\r\n            height: window.innerHeight\r\n        } : null,\r\n        objectPosition: '100% center',\r\n        scale: 1\r\n    });\r\n\r\n    const [sliderState, setSliderState] = useState({\r\n        mouseDownAt: 0,\r\n        prevPercentage: 0,\r\n        percentage: 0\r\n    });\r\n\r\n    // Existing event handlers remain the same\r\n\r\n    const handleImageClick = (e, src, index) => {\r\n        if (isFullScreen && selectedImage === src) {\r\n            setIsFullScreen(false);\r\n            setSelectedImage(null);\r\n            return;\r\n        }\r\n\r\n        const imgElement = e.target;\r\n        const rect = imgElement.getBoundingClientRect();\r\n        const computedStyle = window.getComputedStyle(imgElement);\r\n        const objectPosition = computedStyle.objectPosition;\r\n\r\n        setImageTransitionState({\r\n            rect: {\r\n                top: rect.top,\r\n                left: rect.left,\r\n                width: rect.width,\r\n                height: rect.height\r\n            },\r\n            objectPosition,\r\n            scale: 1\r\n        });\r\n\r\n        setSelectedImage(src);\r\n        setSelectedIndex(index);\r\n        setIsFullScreen(true);\r\n    };\r\n\r\n    const images = Array.from({ length: 7 }, (_, index) => `/images/${index + 1}.jpg`);\r\n\r\n    return (\r\n        <LayoutGroup>\r\n            <div \r\n                id=\"image-track\" \r\n                ref={trackRef} \r\n                style={{ \r\n                    transform: `translate(${sliderState.percentage}%, -50%)`,\r\n                    opacity: isFullScreen ? 0 : 1\r\n                }}\r\n            >\r\n                {images.map((src, index) => (\r\n                    <div key={src} className=\"image-container\">\r\n                        <motion.img\r\n                            layoutId={`image-${index}`}\r\n                            className=\"image\"\r\n                            src={src}\r\n                            alt={`Image ${index + 1}`}\r\n                            draggable=\"false\"\r\n                            onClick={(e) => handleImageClick(e, src, index)}\r\n                            whileHover={{ scale: 1.05 }}\r\n                            style={{\r\n                                cursor: 'pointer',\r\n                                willChange: 'transform',\r\n                            }}\r\n                        />\r\n                        <div className=\"hover-text\">Project {index + 1}</div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n\r\n            <AnimatePresence>\r\n                {(isFullScreen && imageTransitionState.rect) && (\r\n                    <motion.div\r\n                        initial={false}\r\n                        animate={{\r\n                            position: 'fixed',\r\n                            top: 0,\r\n                            left: 0,\r\n                            width: '100vw',\r\n                            height: '100vh',\r\n                            scale: 1,\r\n                            backgroundColor: 'black',\r\n                            zIndex: 1000\r\n                        }}\r\n                        exit={{\r\n                            top: imageTransitionState.rect.top,\r\n                            left: imageTransitionState.rect.left,\r\n                            width: imageTransitionState.rect.width,\r\n                            height: imageTransitionState.rect.height,\r\n                            scale: imageTransitionState.scale\r\n                        }}\r\n                        transition={{\r\n                            duration: 0.4,\r\n                            ease: \"easeInOut\"\r\n                        }}\r\n                        onClick={() => setIsFullScreen(false)}\r\n                    >\r\n                        <motion.img\r\n                            src={selectedImage}\r\n                            style={{\r\n                                width: '100%',\r\n                                height: '100%',\r\n                                objectFit: 'cover',\r\n                                objectPosition: imageTransitionState.objectPosition\r\n                            }}\r\n                        />\r\n                    </motion.div>\r\n                )}\r\n            </AnimatePresence>\r\n        </LayoutGroup>\r\n    );\r\n};\r\n\r\nexport default ImageSlider;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}