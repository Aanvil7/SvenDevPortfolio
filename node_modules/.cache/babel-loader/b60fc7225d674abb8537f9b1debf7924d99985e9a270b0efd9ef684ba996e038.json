{"ast":null,"code":"var _jsxFileName = \"D:\\\\VSC Projects\\\\SvenDevPortfolio-1\\\\src\\\\components\\\\ImageSlider.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport { motion, AnimatePresence, LayoutGroup } from 'framer-motion';\nimport '../styles/ImageSliderStyles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ImageSlider = () => {\n  _s();\n  const trackRef = useRef(null);\n  const [isFullScreen, setIsFullScreen] = useState(false);\n  const [selectedImage, setSelectedImage] = useState(null);\n  const [sliderState, setSliderState] = useState({\n    mouseDownAt: 0,\n    prevPercentage: 0,\n    percentage: 0\n  });\n  useEffect(() => {\n    const track = trackRef.current;\n    if (!track) return;\n    const handleOnDown = e => {\n      var _e$touches$;\n      if (isFullScreen) return;\n      const clientX = e.clientX || e.touches && ((_e$touches$ = e.touches[0]) === null || _e$touches$ === void 0 ? void 0 : _e$touches$.clientX);\n      setSliderState(prev => ({\n        ...prev,\n        mouseDownAt: clientX\n      }));\n    };\n    const handleOnUp = () => {\n      if (isFullScreen) return;\n      setSliderState(prev => ({\n        ...prev,\n        mouseDownAt: 0,\n        prevPercentage: prev.percentage\n      }));\n    };\n    const handleOnMove = e => {\n      var _e$touches$2;\n      if (sliderState.mouseDownAt === 0) return;\n      if (isFullScreen) {\n        setIsFullScreen(false);\n        return;\n      }\n      const clientX = e.clientX || e.touches && ((_e$touches$2 = e.touches[0]) === null || _e$touches$2 === void 0 ? void 0 : _e$touches$2.clientX);\n      const mouseDelta = sliderState.mouseDownAt - clientX;\n      const maxDelta = window.innerWidth / 2;\n      const percentage = mouseDelta / maxDelta * -100;\n      const nextPercentage = Math.max(Math.min(sliderState.prevPercentage + percentage, 0), -100);\n      setSliderState(prev => ({\n        ...prev,\n        percentage: nextPercentage\n      }));\n      track.animate({\n        transform: `translate(${nextPercentage}%, -50%)`\n      }, {\n        duration: 1200,\n        fill: 'forwards'\n      });\n      const images = track.getElementsByClassName('image');\n      Array.from(images).forEach(image => {\n        image.animate({\n          objectPosition: `${100 + nextPercentage}% center`\n        }, {\n          duration: 1200,\n          fill: 'forwards'\n        });\n      });\n    };\n    window.addEventListener('mousedown', handleOnDown);\n    window.addEventListener('mousemove', handleOnMove);\n    window.addEventListener('mouseup', handleOnUp);\n    window.addEventListener('touchstart', handleOnDown);\n    window.addEventListener('touchmove', handleOnMove);\n    window.addEventListener('touchend', handleOnUp);\n    return () => {\n      window.removeEventListener('mousedown', handleOnDown);\n      window.removeEventListener('mousemove', handleOnMove);\n      window.removeEventListener('mouseup', handleOnUp);\n      window.removeEventListener('touchstart', handleOnDown);\n      window.removeEventListener('touchmove', handleOnMove);\n      window.removeEventListener('touchend', handleOnUp);\n    };\n  }, [isFullScreen, sliderState]);\n  const handleImageClick = (e, src, index) => {\n    const track = trackRef.current;\n    const targetPercentage = -index * 10;\n    if (isFullScreen && selectedImage === src) {\n      setIsFullScreen(false);\n      return;\n    }\n    setSelectedImage(src);\n    setSliderState(prev => ({\n      ...prev,\n      percentage: targetPercentage,\n      prevPercentage: targetPercentage\n    }));\n    track.animate({\n      transform: `translate(${targetPercentage}%, -50%)`\n    }, {\n      duration: 500,\n      fill: 'forwards'\n    });\n    setIsFullScreen(true);\n  };\n  const images = Array.from({\n    length: 10\n  }, (_, index) => `/images/${index + 1}.jpg`);\n  return /*#__PURE__*/_jsxDEV(LayoutGroup, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"image-track\",\n      ref: trackRef,\n      style: {\n        transform: `translate(${sliderState.percentage}%, -50%)`\n      },\n      children: images.map((src, index) => /*#__PURE__*/_jsxDEV(motion.img, {\n        className: \"image\",\n        src: src,\n        alt: `Image ${index + 1}`,\n        draggable: \"false\",\n        onClick: e => handleImageClick(e, src, index),\n        whileHover: {\n          scale: 1.05\n        }\n      }, src, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(AnimatePresence, {\n      children: isFullScreen && /*#__PURE__*/_jsxDEV(motion.div, {\n        initial: {\n          opacity: 0\n        },\n        animate: {\n          opacity: 1\n        },\n        exit: {\n          opacity: 0\n        },\n        style: {\n          position: 'fixed',\n          top: 0,\n          left: 0,\n          width: '100vw',\n          height: '100vh',\n          zIndex: 1000,\n          backgroundColor: 'black',\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center'\n        },\n        onClick: () => setIsFullScreen(false),\n        children: /*#__PURE__*/_jsxDEV(motion.img, {\n          src: selectedImage,\n          style: {\n            width: '90%',\n            height: 'auto',\n            objectFit: 'contain'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 9\n  }, this);\n};\n_s(ImageSlider, \"mtE2tT90rx1r4wGcmccjrzTASB8=\");\n_c = ImageSlider;\nexport default ImageSlider;\nvar _c;\n$RefreshReg$(_c, \"ImageSlider\");","map":{"version":3,"names":["React","useEffect","useRef","useState","motion","AnimatePresence","LayoutGroup","jsxDEV","_jsxDEV","ImageSlider","_s","trackRef","isFullScreen","setIsFullScreen","selectedImage","setSelectedImage","sliderState","setSliderState","mouseDownAt","prevPercentage","percentage","track","current","handleOnDown","e","_e$touches$","clientX","touches","prev","handleOnUp","handleOnMove","_e$touches$2","mouseDelta","maxDelta","window","innerWidth","nextPercentage","Math","max","min","animate","transform","duration","fill","images","getElementsByClassName","Array","from","forEach","image","objectPosition","addEventListener","removeEventListener","handleImageClick","src","index","targetPercentage","length","_","children","id","ref","style","map","img","className","alt","draggable","onClick","whileHover","scale","fileName","_jsxFileName","lineNumber","columnNumber","div","initial","opacity","exit","position","top","left","width","height","zIndex","backgroundColor","display","alignItems","justifyContent","objectFit","_c","$RefreshReg$"],"sources":["D:/VSC Projects/SvenDevPortfolio-1/src/components/ImageSlider.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport { motion, AnimatePresence, LayoutGroup } from 'framer-motion';\r\nimport '../styles/ImageSliderStyles.css';\r\n\r\nconst ImageSlider = () => {\r\n    const trackRef = useRef(null);\r\n    const [isFullScreen, setIsFullScreen] = useState(false);\r\n    const [selectedImage, setSelectedImage] = useState(null);\r\n    const [sliderState, setSliderState] = useState({\r\n        mouseDownAt: 0,\r\n        prevPercentage: 0,\r\n        percentage: 0,\r\n    });\r\n\r\n    useEffect(() => {\r\n        const track = trackRef.current;\r\n        if (!track) return;\r\n\r\n        const handleOnDown = (e) => {\r\n            if (isFullScreen) return;\r\n            const clientX = e.clientX || (e.touches && e.touches[0]?.clientX);\r\n            setSliderState((prev) => ({\r\n                ...prev,\r\n                mouseDownAt: clientX,\r\n            }));\r\n        };\r\n\r\n        const handleOnUp = () => {\r\n            if (isFullScreen) return;\r\n            setSliderState((prev) => ({\r\n                ...prev,\r\n                mouseDownAt: 0,\r\n                prevPercentage: prev.percentage,\r\n            }));\r\n        };\r\n\r\n        const handleOnMove = (e) => {\r\n            if (sliderState.mouseDownAt === 0) return;\r\n\r\n            if (isFullScreen) {\r\n                setIsFullScreen(false);\r\n                return;\r\n            }\r\n\r\n            const clientX = e.clientX || (e.touches && e.touches[0]?.clientX);\r\n            const mouseDelta = sliderState.mouseDownAt - clientX;\r\n            const maxDelta = window.innerWidth / 2;\r\n\r\n            const percentage = (mouseDelta / maxDelta) * -100;\r\n            const nextPercentage = Math.max(Math.min(sliderState.prevPercentage + percentage, 0), -100);\r\n\r\n            setSliderState((prev) => ({\r\n                ...prev,\r\n                percentage: nextPercentage,\r\n            }));\r\n\r\n            track.animate(\r\n                {\r\n                    transform: `translate(${nextPercentage}%, -50%)`,\r\n                },\r\n                { duration: 1200, fill: 'forwards' }\r\n            );\r\n\r\n            const images = track.getElementsByClassName('image');\r\n            Array.from(images).forEach((image) => {\r\n                image.animate(\r\n                    {\r\n                        objectPosition: `${100 + nextPercentage}% center`,\r\n                    },\r\n                    { duration: 1200, fill: 'forwards' }\r\n                );\r\n            });\r\n        };\r\n\r\n        window.addEventListener('mousedown', handleOnDown);\r\n        window.addEventListener('mousemove', handleOnMove);\r\n        window.addEventListener('mouseup', handleOnUp);\r\n\r\n        window.addEventListener('touchstart', handleOnDown);\r\n        window.addEventListener('touchmove', handleOnMove);\r\n        window.addEventListener('touchend', handleOnUp);\r\n\r\n        return () => {\r\n            window.removeEventListener('mousedown', handleOnDown);\r\n            window.removeEventListener('mousemove', handleOnMove);\r\n            window.removeEventListener('mouseup', handleOnUp);\r\n\r\n            window.removeEventListener('touchstart', handleOnDown);\r\n            window.removeEventListener('touchmove', handleOnMove);\r\n            window.removeEventListener('touchend', handleOnUp);\r\n        };\r\n    }, [isFullScreen, sliderState]);\r\n\r\n    const handleImageClick = (e, src, index) => {\r\n        const track = trackRef.current;\r\n        const targetPercentage = (-index * 10);\r\n\r\n        if (isFullScreen && selectedImage === src) {\r\n            setIsFullScreen(false);\r\n            return;\r\n        }\r\n\r\n        setSelectedImage(src);\r\n        setSliderState((prev) => ({\r\n            ...prev,\r\n            percentage: targetPercentage,\r\n            prevPercentage: targetPercentage,\r\n        }));\r\n\r\n        track.animate(\r\n            {\r\n                transform: `translate(${targetPercentage}%, -50%)`,\r\n            },\r\n            { duration: 500, fill: 'forwards' }\r\n        );\r\n\r\n        setIsFullScreen(true);\r\n    };\r\n\r\n    const images = Array.from({ length: 10 }, (_, index) => `/images/${index + 1}.jpg`);\r\n\r\n    return (\r\n        <LayoutGroup>\r\n            <div\r\n                id=\"image-track\"\r\n                ref={trackRef}\r\n                style={{\r\n                    transform: `translate(${sliderState.percentage}%, -50%)`,\r\n                }}\r\n            >\r\n                {images.map((src, index) => (\r\n                    <motion.img\r\n                        key={src}\r\n                        className=\"image\"\r\n                        src={src}\r\n                        alt={`Image ${index + 1}`}\r\n                        draggable=\"false\"\r\n                        onClick={(e) => handleImageClick(e, src, index)}\r\n                        whileHover={{ scale: 1.05 }}\r\n                    />\r\n                ))}\r\n            </div>\r\n\r\n            <AnimatePresence>\r\n                {isFullScreen && (\r\n                    <motion.div\r\n                        initial={{ opacity: 0 }}\r\n                        animate={{ opacity: 1 }}\r\n                        exit={{ opacity: 0 }}\r\n                        style={{\r\n                            position: 'fixed',\r\n                            top: 0,\r\n                            left: 0,\r\n                            width: '100vw',\r\n                            height: '100vh',\r\n                            zIndex: 1000,\r\n                            backgroundColor: 'black',\r\n                            display: 'flex',\r\n                            alignItems: 'center',\r\n                            justifyContent: 'center',\r\n                        }}\r\n                        onClick={() => setIsFullScreen(false)}\r\n                    >\r\n                        <motion.img\r\n                            src={selectedImage}\r\n                            style={{\r\n                                width: '90%',\r\n                                height: 'auto',\r\n                                objectFit: 'contain',\r\n                            }}\r\n                        />\r\n                    </motion.div>\r\n                )}\r\n            </AnimatePresence>\r\n        </LayoutGroup>\r\n    );\r\n};\r\n\r\nexport default ImageSlider;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}