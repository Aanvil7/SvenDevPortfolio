{"ast":null,"code":"var _jsxFileName = \"D:\\\\VSC Projects\\\\SvenDevPortfolio-2\\\\src\\\\components\\\\ImageSlider\\\\ImageSlider.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport { motion, AnimatePresence, LayoutGroup } from 'framer-motion';\nimport './ImageSliderStyles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ImageSlider = ({\n  startFullScreen = false,\n  initialImage = null\n}) => {\n  _s();\n  const trackRef = useRef(null);\n  const [isFullScreen, setIsFullScreen] = useState(startFullScreen);\n  const [selectedImage, setSelectedImage] = useState(initialImage);\n  const [selectedIndex, setSelectedIndex] = useState(null);\n  const [imageTransitionState, setImageTransitionState] = useState({\n    rect: startFullScreen ? {\n      top: 0,\n      left: 0,\n      width: window.innerWidth,\n      height: window.innerHeight\n    } : null,\n    objectPosition: '100% center',\n    scale: 1\n  });\n  const [sliderState, setSliderState] = useState({\n    mouseDownAt: 0,\n    prevPercentage: 0,\n    percentage: 0\n  });\n  const imageRefs = useRef([]);\n  useEffect(() => {\n    setTimeout(() => {\n      if (imageRefs.current[0]) {\n        // Trigger click on the first image after a slight delay\n        imageRefs.current[0].click();\n      }\n    }, 25); // Adjust the delay as needed\n  }, []);\n  useEffect(() => {\n    const track = trackRef.current;\n    if (!track) return;\n    const handleOnDown = e => {\n      var _e$touches$;\n      if (isFullScreen) return;\n      const clientX = e.clientX || e.touches && ((_e$touches$ = e.touches[0]) === null || _e$touches$ === void 0 ? void 0 : _e$touches$.clientX);\n      setSliderState(prev => ({\n        ...prev,\n        mouseDownAt: clientX\n      }));\n    };\n    const handleOnUp = () => {\n      if (isFullScreen) return;\n      setSliderState(prev => ({\n        ...prev,\n        mouseDownAt: 0,\n        prevPercentage: prev.percentage\n      }));\n    };\n    const handleOnMove = e => {\n      var _e$touches$2;\n      if (isFullScreen) return;\n      const clientX = e.clientX || e.touches && ((_e$touches$2 = e.touches[0]) === null || _e$touches$2 === void 0 ? void 0 : _e$touches$2.clientX);\n      if (sliderState.mouseDownAt === 0) return;\n      const mouseDelta = sliderState.mouseDownAt - clientX;\n      const maxDelta = window.innerWidth / 0.8;\n      const percentage = mouseDelta / maxDelta * -100;\n      const nextPercentageUnconstrained = sliderState.prevPercentage + percentage;\n      const nextPercentage = Math.max(Math.min(nextPercentageUnconstrained, 0), -95);\n      setSliderState(prev => ({\n        ...prev,\n        percentage: nextPercentage\n      }));\n      track.animate({\n        transform: `translate(${nextPercentage}%, -50%)`\n      }, {\n        duration: 600,\n        fill: 'forwards',\n        easing: 'cubic-bezier(0.25, 0.1, 0.25, 1)'\n      });\n      const images = track.getElementsByClassName(\"image\");\n      Array.from(images).forEach(image => {\n        image.animate({\n          objectPosition: `${100 + nextPercentage * 1.1}% center`\n        }, {\n          duration: 600,\n          fill: 'forwards',\n          easing: 'cubic-bezier(0.25, 0.1, 0.25, 1)'\n        });\n      });\n    };\n    window.addEventListener('mousedown', handleOnDown);\n    window.addEventListener('mousemove', handleOnMove);\n    window.addEventListener('mouseup', handleOnUp);\n    window.addEventListener('touchstart', handleOnDown);\n    window.addEventListener('touchmove', handleOnMove);\n    window.addEventListener('touchend', handleOnUp);\n    return () => {\n      window.removeEventListener('mousedown', handleOnDown);\n      window.removeEventListener('mousemove', handleOnMove);\n      window.removeEventListener('mouseup', handleOnUp);\n      window.removeEventListener('touchstart', handleOnDown);\n      window.removeEventListener('touchmove', handleOnMove);\n      window.removeEventListener('touchend', handleOnUp);\n    };\n  }, [isFullScreen, sliderState]);\n  const handleImageClick = (e, src, index) => {\n    // If already in full screen and clicking the same image, close it\n    if (isFullScreen && selectedImage === src) {\n      handleFullScreenClose(); // Move the closing logic to a dedicated function\n      return;\n    }\n\n    // Capture the exact state of the image at click\n    const imgElement = e.target;\n    const rect = imgElement.getBoundingClientRect();\n\n    // Get computed style to capture exact object-position\n    const computedStyle = window.getComputedStyle(imgElement);\n    const objectPosition = computedStyle.objectPosition;\n\n    // Set image transition state immediately\n    setImageTransitionState({\n      rect: {\n        top: rect.top,\n        left: rect.left,\n        width: rect.width,\n        height: rect.height\n      },\n      objectPosition,\n      scale: 1\n    });\n\n    // Set full screen state\n    setSelectedImage(src);\n    setSelectedIndex(index);\n    setIsFullScreen(true); // This triggers the fullscreen mode\n  };\n  const handleFullScreenClose = () => {\n    setIsFullScreen(false);\n    setSelectedImage(null);\n    setImageTransitionState(prev => ({\n      ...prev,\n      rect: null\n    }));\n  };\n  const images = Array.from({\n    length: 7\n  }, (_, index) => `/images/${index + 1}.jpg`);\n  return /*#__PURE__*/_jsxDEV(LayoutGroup, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"image-track\",\n      ref: trackRef,\n      style: {\n        transform: `translate(${sliderState.percentage}%, -50%)`,\n        opacity: isFullScreen ? 0 : 1,\n        transition: 'opacity 0.4s ease-in-out'\n      },\n      children: images.map((src, index) => /*#__PURE__*/_jsxDEV(motion.img, {\n        layoutId: `image-${index}`,\n        className: \"image\",\n        src: src,\n        alt: `Image ${index + 1}`,\n        draggable: \"false\",\n        onClick: e => handleImageClick(e, src, index),\n        whileHover: {\n          scale: 1.05\n        },\n        style: {\n          cursor: 'pointer',\n          willChange: 'transform'\n        },\n        ref: el => imageRefs.current[index] = el // Assign ref dynamically\n      }, src, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 5\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(AnimatePresence, {\n      children: isFullScreen && imageTransitionState.rect && /*#__PURE__*/_jsxDEV(motion.div, {\n        initial: {\n          position: 'fixed',\n          top: imageTransitionState.rect.top,\n          left: imageTransitionState.rect.left,\n          width: imageTransitionState.rect.width,\n          height: imageTransitionState.rect.height,\n          scale: imageTransitionState.scale,\n          backgroundColor: 'black',\n          zIndex: 1000,\n          overflow: 'hidden'\n        },\n        animate: {\n          top: 0,\n          left: 0,\n          width: '100vw',\n          height: '100vh',\n          scale: 1\n        },\n        exit: {\n          top: imageTransitionState.rect.top,\n          left: imageTransitionState.rect.left,\n          width: imageTransitionState.rect.width,\n          height: imageTransitionState.rect.height,\n          scale: imageTransitionState.scale\n        },\n        transition: {\n          duration: 0.4,\n          ease: \"easeInOut\"\n        },\n        onClick: handleFullScreenClose,\n        children: /*#__PURE__*/_jsxDEV(motion.img, {\n          src: selectedImage,\n          style: {\n            width: '100%',\n            height: '100%',\n            objectFit: 'cover',\n            objectPosition: imageTransitionState.objectPosition,\n            transform: `scale(${imageTransitionState.scale})`,\n            transformOrigin: 'center center'\n          },\n          alt: \"Full screen view\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 169,\n    columnNumber: 9\n  }, this);\n};\n_s(ImageSlider, \"STuU+LrAaKSMn97sfD4fCm+TNfc=\");\n_c = ImageSlider;\nexport default ImageSlider;\nvar _c;\n$RefreshReg$(_c, \"ImageSlider\");","map":{"version":3,"names":["React","useEffect","useRef","useState","motion","AnimatePresence","LayoutGroup","jsxDEV","_jsxDEV","ImageSlider","startFullScreen","initialImage","_s","trackRef","isFullScreen","setIsFullScreen","selectedImage","setSelectedImage","selectedIndex","setSelectedIndex","imageTransitionState","setImageTransitionState","rect","top","left","width","window","innerWidth","height","innerHeight","objectPosition","scale","sliderState","setSliderState","mouseDownAt","prevPercentage","percentage","imageRefs","setTimeout","current","click","track","handleOnDown","e","_e$touches$","clientX","touches","prev","handleOnUp","handleOnMove","_e$touches$2","mouseDelta","maxDelta","nextPercentageUnconstrained","nextPercentage","Math","max","min","animate","transform","duration","fill","easing","images","getElementsByClassName","Array","from","forEach","image","addEventListener","removeEventListener","handleImageClick","src","index","handleFullScreenClose","imgElement","target","getBoundingClientRect","computedStyle","getComputedStyle","length","_","children","id","ref","style","opacity","transition","map","img","layoutId","className","alt","draggable","onClick","whileHover","cursor","willChange","el","fileName","_jsxFileName","lineNumber","columnNumber","div","initial","position","backgroundColor","zIndex","overflow","exit","ease","objectFit","transformOrigin","_c","$RefreshReg$"],"sources":["D:/VSC Projects/SvenDevPortfolio-2/src/components/ImageSlider/ImageSlider.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport { motion, AnimatePresence, LayoutGroup } from 'framer-motion';\r\nimport './ImageSliderStyles.css';\r\n\r\nconst ImageSlider = ({ startFullScreen = false, initialImage = null }) => {\r\n    const trackRef = useRef(null);\r\n    const [isFullScreen, setIsFullScreen] = useState(startFullScreen);\r\n    const [selectedImage, setSelectedImage] = useState(initialImage);\r\n    const [selectedIndex, setSelectedIndex] = useState(null);\r\n    const [imageTransitionState, setImageTransitionState] = useState({\r\n        rect: startFullScreen ? {\r\n            top: 0,\r\n            left: 0,\r\n            width: window.innerWidth,\r\n            height: window.innerHeight\r\n        } : null,\r\n        objectPosition: '100% center',\r\n        scale: 1\r\n    });\r\n\r\n    const [sliderState, setSliderState] = useState({\r\n        mouseDownAt: 0,\r\n        prevPercentage: 0,\r\n        percentage: 0\r\n    });\r\n    const imageRefs = useRef([]);\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            if (imageRefs.current[0]) {\r\n                // Trigger click on the first image after a slight delay\r\n                imageRefs.current[0].click();\r\n            }\r\n        }, 25); // Adjust the delay as needed\r\n    }, []);\r\n    useEffect(() => {\r\n        const track = trackRef.current;\r\n        if (!track) return;\r\n\r\n        const handleOnDown = (e) => {\r\n            if (isFullScreen) return;\r\n            \r\n            const clientX = e.clientX || (e.touches && e.touches[0]?.clientX);\r\n            setSliderState(prev => ({\r\n                ...prev,\r\n                mouseDownAt: clientX\r\n            }));\r\n        };\r\n\r\n        const handleOnUp = () => {\r\n            if (isFullScreen) return;\r\n            \r\n            setSliderState(prev => ({\r\n                ...prev,\r\n                mouseDownAt: 0,\r\n                prevPercentage: prev.percentage\r\n            }));\r\n        };\r\n\r\n        const handleOnMove = (e) => {\r\n            if (isFullScreen) return;\r\n            \r\n            const clientX = e.clientX || (e.touches && e.touches[0]?.clientX);\r\n            \r\n            if (sliderState.mouseDownAt === 0) return;\r\n\r\n            const mouseDelta = sliderState.mouseDownAt - clientX;\r\n            const maxDelta = window.innerWidth / 0.8;\r\n\r\n            const percentage = (mouseDelta / maxDelta) * -100;\r\n            const nextPercentageUnconstrained = sliderState.prevPercentage + percentage;\r\n            const nextPercentage = Math.max(Math.min(nextPercentageUnconstrained, 0), -95);\r\n\r\n            setSliderState(prev => ({\r\n                ...prev,\r\n                percentage: nextPercentage\r\n            }));\r\n\r\n            track.animate(\r\n                {\r\n                    transform: `translate(${nextPercentage}%, -50%)`\r\n                },\r\n                { \r\n                    duration: 600, \r\n                    fill: 'forwards',\r\n                    easing: 'cubic-bezier(0.25, 0.1, 0.25, 1)' \r\n                }\r\n            );\r\n\r\n            const images = track.getElementsByClassName(\"image\");\r\n            Array.from(images).forEach((image) => {\r\n                image.animate(\r\n                    {\r\n                        objectPosition: `${100 + nextPercentage * 1.1}% center`\r\n                    },\r\n                    { \r\n                        duration: 600, \r\n                        fill: 'forwards',\r\n                        easing: 'cubic-bezier(0.25, 0.1, 0.25, 1)'\r\n                    }\r\n                );\r\n            });\r\n        };\r\n\r\n        window.addEventListener('mousedown', handleOnDown);\r\n        window.addEventListener('mousemove', handleOnMove);\r\n        window.addEventListener('mouseup', handleOnUp);\r\n        \r\n        window.addEventListener('touchstart', handleOnDown);\r\n        window.addEventListener('touchmove', handleOnMove);\r\n        window.addEventListener('touchend', handleOnUp);\r\n\r\n        return () => {\r\n            window.removeEventListener('mousedown', handleOnDown);\r\n            window.removeEventListener('mousemove', handleOnMove);\r\n            window.removeEventListener('mouseup', handleOnUp);\r\n            \r\n            window.removeEventListener('touchstart', handleOnDown);\r\n            window.removeEventListener('touchmove', handleOnMove);\r\n            window.removeEventListener('touchend', handleOnUp);\r\n        };\r\n    }, [isFullScreen, sliderState]);\r\n\r\n    const handleImageClick = (e, src, index) => {\r\n        // If already in full screen and clicking the same image, close it\r\n        if (isFullScreen && selectedImage === src) {\r\n            handleFullScreenClose(); // Move the closing logic to a dedicated function\r\n            return;\r\n        }\r\n    \r\n        // Capture the exact state of the image at click\r\n        const imgElement = e.target;\r\n        const rect = imgElement.getBoundingClientRect();\r\n        \r\n        // Get computed style to capture exact object-position\r\n        const computedStyle = window.getComputedStyle(imgElement);\r\n        const objectPosition = computedStyle.objectPosition;\r\n    \r\n        // Set image transition state immediately\r\n        setImageTransitionState({\r\n            rect: {\r\n                top: rect.top,\r\n                left: rect.left,\r\n                width: rect.width,\r\n                height: rect.height\r\n            },\r\n            objectPosition,\r\n            scale: 1\r\n        });\r\n    \r\n        // Set full screen state\r\n        setSelectedImage(src);\r\n        setSelectedIndex(index);\r\n        setIsFullScreen(true); // This triggers the fullscreen mode\r\n    };\r\n\r\n    const handleFullScreenClose = () => {\r\n        setIsFullScreen(false);\r\n        setSelectedImage(null);\r\n        setImageTransitionState(prev => ({\r\n            ...prev,\r\n            rect: null\r\n        }));\r\n    };\r\n\r\n    const images = Array.from({ length: 7 }, (_, index) => `/images/${index + 1}.jpg`);\r\n\r\n    return (\r\n        <LayoutGroup>\r\n            <div \r\n                id=\"image-track\" \r\n                ref={trackRef} \r\n                style={{ \r\n                    transform: `translate(${sliderState.percentage}%, -50%)`,\r\n                    opacity: isFullScreen ? 0 : 1,\r\n                    transition: 'opacity 0.4s ease-in-out'\r\n                }}\r\n            >\r\n                {images.map((src, index) => (\r\n    <motion.img\r\n        layoutId={`image-${index}`}\r\n        key={src}\r\n        className=\"image\"\r\n        src={src}\r\n        alt={`Image ${index + 1}`}\r\n        draggable=\"false\"\r\n        onClick={(e) => handleImageClick(e, src, index)}\r\n        whileHover={{ scale: 1.05 }}\r\n        style={{\r\n            cursor: 'pointer',\r\n            willChange: 'transform'\r\n        }}\r\n        ref={(el) => (imageRefs.current[index] = el)} // Assign ref dynamically\r\n    />\r\n))}\r\n            </div>\r\n\r\n            <AnimatePresence>\r\n                {isFullScreen && imageTransitionState.rect && (\r\n                    <motion.div\r\n                        initial={{\r\n                            position: 'fixed',\r\n                            top: imageTransitionState.rect.top,\r\n                            left: imageTransitionState.rect.left,\r\n                            width: imageTransitionState.rect.width,\r\n                            height: imageTransitionState.rect.height,\r\n                            scale: imageTransitionState.scale,\r\n                            backgroundColor: 'black',\r\n                            zIndex: 1000,\r\n                            overflow: 'hidden'\r\n                        }}\r\n                        animate={{\r\n                            top: 0,\r\n                            left: 0,\r\n                            width: '100vw',\r\n                            height: '100vh',\r\n                            scale: 1\r\n                        }}\r\n                        exit={{\r\n                            top: imageTransitionState.rect.top,\r\n                            left: imageTransitionState.rect.left,\r\n                            width: imageTransitionState.rect.width,\r\n                            height: imageTransitionState.rect.height,\r\n                            scale: imageTransitionState.scale\r\n                        }}\r\n                        transition={{\r\n                            duration: 0.4,\r\n                            ease: \"easeInOut\"\r\n                        }}\r\n                        onClick={handleFullScreenClose}\r\n                    >\r\n                        <motion.img\r\n                            src={selectedImage}\r\n                            style={{\r\n                                width: '100%',\r\n                                height: '100%',\r\n                                objectFit: 'cover',\r\n                                objectPosition: imageTransitionState.objectPosition,\r\n                                transform: `scale(${imageTransitionState.scale})`,\r\n                                transformOrigin: 'center center'\r\n                            }}\r\n                            alt=\"Full screen view\"\r\n                        />\r\n                    </motion.div>\r\n                )}\r\n            </AnimatePresence>\r\n        </LayoutGroup>\r\n    );\r\n};\r\n\r\nexport default ImageSlider;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,SAASC,MAAM,EAAEC,eAAe,EAAEC,WAAW,QAAQ,eAAe;AACpE,OAAO,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,MAAMC,WAAW,GAAGA,CAAC;EAAEC,eAAe,GAAG,KAAK;EAAEC,YAAY,GAAG;AAAK,CAAC,KAAK;EAAAC,EAAA;EACtE,MAAMC,QAAQ,GAAGX,MAAM,CAAC,IAAI,CAAC;EAC7B,MAAM,CAACY,YAAY,EAAEC,eAAe,CAAC,GAAGZ,QAAQ,CAACO,eAAe,CAAC;EACjE,MAAM,CAACM,aAAa,EAAEC,gBAAgB,CAAC,GAAGd,QAAQ,CAACQ,YAAY,CAAC;EAChE,MAAM,CAACO,aAAa,EAAEC,gBAAgB,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM,CAACiB,oBAAoB,EAAEC,uBAAuB,CAAC,GAAGlB,QAAQ,CAAC;IAC7DmB,IAAI,EAAEZ,eAAe,GAAG;MACpBa,GAAG,EAAE,CAAC;MACNC,IAAI,EAAE,CAAC;MACPC,KAAK,EAAEC,MAAM,CAACC,UAAU;MACxBC,MAAM,EAAEF,MAAM,CAACG;IACnB,CAAC,GAAG,IAAI;IACRC,cAAc,EAAE,aAAa;IAC7BC,KAAK,EAAE;EACX,CAAC,CAAC;EAEF,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAG9B,QAAQ,CAAC;IAC3C+B,WAAW,EAAE,CAAC;IACdC,cAAc,EAAE,CAAC;IACjBC,UAAU,EAAE;EAChB,CAAC,CAAC;EACF,MAAMC,SAAS,GAAGnC,MAAM,CAAC,EAAE,CAAC;EAE5BD,SAAS,CAAC,MAAM;IACZqC,UAAU,CAAC,MAAM;MACb,IAAID,SAAS,CAACE,OAAO,CAAC,CAAC,CAAC,EAAE;QACtB;QACAF,SAAS,CAACE,OAAO,CAAC,CAAC,CAAC,CAACC,KAAK,CAAC,CAAC;MAChC;IACJ,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;EACZ,CAAC,EAAE,EAAE,CAAC;EACNvC,SAAS,CAAC,MAAM;IACZ,MAAMwC,KAAK,GAAG5B,QAAQ,CAAC0B,OAAO;IAC9B,IAAI,CAACE,KAAK,EAAE;IAEZ,MAAMC,YAAY,GAAIC,CAAC,IAAK;MAAA,IAAAC,WAAA;MACxB,IAAI9B,YAAY,EAAE;MAElB,MAAM+B,OAAO,GAAGF,CAAC,CAACE,OAAO,IAAKF,CAAC,CAACG,OAAO,MAAAF,WAAA,GAAID,CAAC,CAACG,OAAO,CAAC,CAAC,CAAC,cAAAF,WAAA,uBAAZA,WAAA,CAAcC,OAAO,CAAC;MACjEZ,cAAc,CAACc,IAAI,KAAK;QACpB,GAAGA,IAAI;QACPb,WAAW,EAAEW;MACjB,CAAC,CAAC,CAAC;IACP,CAAC;IAED,MAAMG,UAAU,GAAGA,CAAA,KAAM;MACrB,IAAIlC,YAAY,EAAE;MAElBmB,cAAc,CAACc,IAAI,KAAK;QACpB,GAAGA,IAAI;QACPb,WAAW,EAAE,CAAC;QACdC,cAAc,EAAEY,IAAI,CAACX;MACzB,CAAC,CAAC,CAAC;IACP,CAAC;IAED,MAAMa,YAAY,GAAIN,CAAC,IAAK;MAAA,IAAAO,YAAA;MACxB,IAAIpC,YAAY,EAAE;MAElB,MAAM+B,OAAO,GAAGF,CAAC,CAACE,OAAO,IAAKF,CAAC,CAACG,OAAO,MAAAI,YAAA,GAAIP,CAAC,CAACG,OAAO,CAAC,CAAC,CAAC,cAAAI,YAAA,uBAAZA,YAAA,CAAcL,OAAO,CAAC;MAEjE,IAAIb,WAAW,CAACE,WAAW,KAAK,CAAC,EAAE;MAEnC,MAAMiB,UAAU,GAAGnB,WAAW,CAACE,WAAW,GAAGW,OAAO;MACpD,MAAMO,QAAQ,GAAG1B,MAAM,CAACC,UAAU,GAAG,GAAG;MAExC,MAAMS,UAAU,GAAIe,UAAU,GAAGC,QAAQ,GAAI,CAAC,GAAG;MACjD,MAAMC,2BAA2B,GAAGrB,WAAW,CAACG,cAAc,GAAGC,UAAU;MAC3E,MAAMkB,cAAc,GAAGC,IAAI,CAACC,GAAG,CAACD,IAAI,CAACE,GAAG,CAACJ,2BAA2B,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC;MAE9EpB,cAAc,CAACc,IAAI,KAAK;QACpB,GAAGA,IAAI;QACPX,UAAU,EAAEkB;MAChB,CAAC,CAAC,CAAC;MAEHb,KAAK,CAACiB,OAAO,CACT;QACIC,SAAS,EAAE,aAAaL,cAAc;MAC1C,CAAC,EACD;QACIM,QAAQ,EAAE,GAAG;QACbC,IAAI,EAAE,UAAU;QAChBC,MAAM,EAAE;MACZ,CACJ,CAAC;MAED,MAAMC,MAAM,GAAGtB,KAAK,CAACuB,sBAAsB,CAAC,OAAO,CAAC;MACpDC,KAAK,CAACC,IAAI,CAACH,MAAM,CAAC,CAACI,OAAO,CAAEC,KAAK,IAAK;QAClCA,KAAK,CAACV,OAAO,CACT;UACI5B,cAAc,EAAE,GAAG,GAAG,GAAGwB,cAAc,GAAG,GAAG;QACjD,CAAC,EACD;UACIM,QAAQ,EAAE,GAAG;UACbC,IAAI,EAAE,UAAU;UAChBC,MAAM,EAAE;QACZ,CACJ,CAAC;MACL,CAAC,CAAC;IACN,CAAC;IAEDpC,MAAM,CAAC2C,gBAAgB,CAAC,WAAW,EAAE3B,YAAY,CAAC;IAClDhB,MAAM,CAAC2C,gBAAgB,CAAC,WAAW,EAAEpB,YAAY,CAAC;IAClDvB,MAAM,CAAC2C,gBAAgB,CAAC,SAAS,EAAErB,UAAU,CAAC;IAE9CtB,MAAM,CAAC2C,gBAAgB,CAAC,YAAY,EAAE3B,YAAY,CAAC;IACnDhB,MAAM,CAAC2C,gBAAgB,CAAC,WAAW,EAAEpB,YAAY,CAAC;IAClDvB,MAAM,CAAC2C,gBAAgB,CAAC,UAAU,EAAErB,UAAU,CAAC;IAE/C,OAAO,MAAM;MACTtB,MAAM,CAAC4C,mBAAmB,CAAC,WAAW,EAAE5B,YAAY,CAAC;MACrDhB,MAAM,CAAC4C,mBAAmB,CAAC,WAAW,EAAErB,YAAY,CAAC;MACrDvB,MAAM,CAAC4C,mBAAmB,CAAC,SAAS,EAAEtB,UAAU,CAAC;MAEjDtB,MAAM,CAAC4C,mBAAmB,CAAC,YAAY,EAAE5B,YAAY,CAAC;MACtDhB,MAAM,CAAC4C,mBAAmB,CAAC,WAAW,EAAErB,YAAY,CAAC;MACrDvB,MAAM,CAAC4C,mBAAmB,CAAC,UAAU,EAAEtB,UAAU,CAAC;IACtD,CAAC;EACL,CAAC,EAAE,CAAClC,YAAY,EAAEkB,WAAW,CAAC,CAAC;EAE/B,MAAMuC,gBAAgB,GAAGA,CAAC5B,CAAC,EAAE6B,GAAG,EAAEC,KAAK,KAAK;IACxC;IACA,IAAI3D,YAAY,IAAIE,aAAa,KAAKwD,GAAG,EAAE;MACvCE,qBAAqB,CAAC,CAAC,CAAC,CAAC;MACzB;IACJ;;IAEA;IACA,MAAMC,UAAU,GAAGhC,CAAC,CAACiC,MAAM;IAC3B,MAAMtD,IAAI,GAAGqD,UAAU,CAACE,qBAAqB,CAAC,CAAC;;IAE/C;IACA,MAAMC,aAAa,GAAGpD,MAAM,CAACqD,gBAAgB,CAACJ,UAAU,CAAC;IACzD,MAAM7C,cAAc,GAAGgD,aAAa,CAAChD,cAAc;;IAEnD;IACAT,uBAAuB,CAAC;MACpBC,IAAI,EAAE;QACFC,GAAG,EAAED,IAAI,CAACC,GAAG;QACbC,IAAI,EAAEF,IAAI,CAACE,IAAI;QACfC,KAAK,EAAEH,IAAI,CAACG,KAAK;QACjBG,MAAM,EAAEN,IAAI,CAACM;MACjB,CAAC;MACDE,cAAc;MACdC,KAAK,EAAE;IACX,CAAC,CAAC;;IAEF;IACAd,gBAAgB,CAACuD,GAAG,CAAC;IACrBrD,gBAAgB,CAACsD,KAAK,CAAC;IACvB1D,eAAe,CAAC,IAAI,CAAC,CAAC,CAAC;EAC3B,CAAC;EAED,MAAM2D,qBAAqB,GAAGA,CAAA,KAAM;IAChC3D,eAAe,CAAC,KAAK,CAAC;IACtBE,gBAAgB,CAAC,IAAI,CAAC;IACtBI,uBAAuB,CAAC0B,IAAI,KAAK;MAC7B,GAAGA,IAAI;MACPzB,IAAI,EAAE;IACV,CAAC,CAAC,CAAC;EACP,CAAC;EAED,MAAMyC,MAAM,GAAGE,KAAK,CAACC,IAAI,CAAC;IAAEc,MAAM,EAAE;EAAE,CAAC,EAAE,CAACC,CAAC,EAAER,KAAK,KAAK,WAAWA,KAAK,GAAG,CAAC,MAAM,CAAC;EAElF,oBACIjE,OAAA,CAACF,WAAW;IAAA4E,QAAA,gBACR1E,OAAA;MACI2E,EAAE,EAAC,aAAa;MAChBC,GAAG,EAAEvE,QAAS;MACdwE,KAAK,EAAE;QACH1B,SAAS,EAAE,aAAa3B,WAAW,CAACI,UAAU,UAAU;QACxDkD,OAAO,EAAExE,YAAY,GAAG,CAAC,GAAG,CAAC;QAC7ByE,UAAU,EAAE;MAChB,CAAE;MAAAL,QAAA,EAEDnB,MAAM,CAACyB,GAAG,CAAC,CAAChB,GAAG,EAAEC,KAAK,kBACnCjE,OAAA,CAACJ,MAAM,CAACqF,GAAG;QACPC,QAAQ,EAAE,SAASjB,KAAK,EAAG;QAE3BkB,SAAS,EAAC,OAAO;QACjBnB,GAAG,EAAEA,GAAI;QACToB,GAAG,EAAE,SAASnB,KAAK,GAAG,CAAC,EAAG;QAC1BoB,SAAS,EAAC,OAAO;QACjBC,OAAO,EAAGnD,CAAC,IAAK4B,gBAAgB,CAAC5B,CAAC,EAAE6B,GAAG,EAAEC,KAAK,CAAE;QAChDsB,UAAU,EAAE;UAAEhE,KAAK,EAAE;QAAK,CAAE;QAC5BsD,KAAK,EAAE;UACHW,MAAM,EAAE,SAAS;UACjBC,UAAU,EAAE;QAChB,CAAE;QACFb,GAAG,EAAGc,EAAE,IAAM7D,SAAS,CAACE,OAAO,CAACkC,KAAK,CAAC,GAAGyB,EAAI,CAAC;MAAA,GAXzC1B,GAAG;QAAA2B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAYX,CACJ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACe,CAAC,eAEN9F,OAAA,CAACH,eAAe;MAAA6E,QAAA,EACXpE,YAAY,IAAIM,oBAAoB,CAACE,IAAI,iBACtCd,OAAA,CAACJ,MAAM,CAACmG,GAAG;QACPC,OAAO,EAAE;UACLC,QAAQ,EAAE,OAAO;UACjBlF,GAAG,EAAEH,oBAAoB,CAACE,IAAI,CAACC,GAAG;UAClCC,IAAI,EAAEJ,oBAAoB,CAACE,IAAI,CAACE,IAAI;UACpCC,KAAK,EAAEL,oBAAoB,CAACE,IAAI,CAACG,KAAK;UACtCG,MAAM,EAAER,oBAAoB,CAACE,IAAI,CAACM,MAAM;UACxCG,KAAK,EAAEX,oBAAoB,CAACW,KAAK;UACjC2E,eAAe,EAAE,OAAO;UACxBC,MAAM,EAAE,IAAI;UACZC,QAAQ,EAAE;QACd,CAAE;QACFlD,OAAO,EAAE;UACLnC,GAAG,EAAE,CAAC;UACNC,IAAI,EAAE,CAAC;UACPC,KAAK,EAAE,OAAO;UACdG,MAAM,EAAE,OAAO;UACfG,KAAK,EAAE;QACX,CAAE;QACF8E,IAAI,EAAE;UACFtF,GAAG,EAAEH,oBAAoB,CAACE,IAAI,CAACC,GAAG;UAClCC,IAAI,EAAEJ,oBAAoB,CAACE,IAAI,CAACE,IAAI;UACpCC,KAAK,EAAEL,oBAAoB,CAACE,IAAI,CAACG,KAAK;UACtCG,MAAM,EAAER,oBAAoB,CAACE,IAAI,CAACM,MAAM;UACxCG,KAAK,EAAEX,oBAAoB,CAACW;QAChC,CAAE;QACFwD,UAAU,EAAE;UACR3B,QAAQ,EAAE,GAAG;UACbkD,IAAI,EAAE;QACV,CAAE;QACFhB,OAAO,EAAEpB,qBAAsB;QAAAQ,QAAA,eAE/B1E,OAAA,CAACJ,MAAM,CAACqF,GAAG;UACPjB,GAAG,EAAExD,aAAc;UACnBqE,KAAK,EAAE;YACH5D,KAAK,EAAE,MAAM;YACbG,MAAM,EAAE,MAAM;YACdmF,SAAS,EAAE,OAAO;YAClBjF,cAAc,EAAEV,oBAAoB,CAACU,cAAc;YACnD6B,SAAS,EAAE,SAASvC,oBAAoB,CAACW,KAAK,GAAG;YACjDiF,eAAe,EAAE;UACrB,CAAE;UACFpB,GAAG,EAAC;QAAkB;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACzB;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACM;IACf;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACY,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACT,CAAC;AAEtB,CAAC;AAAC1F,EAAA,CApPIH,WAAW;AAAAwG,EAAA,GAAXxG,WAAW;AAsPjB,eAAeA,WAAW;AAAC,IAAAwG,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}