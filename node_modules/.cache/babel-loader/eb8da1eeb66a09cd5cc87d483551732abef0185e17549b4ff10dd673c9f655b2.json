{"ast":null,"code":"var _jsxFileName = \"D:\\\\VSC Projects\\\\SvenDevPortfolio-2\\\\src\\\\components\\\\ImageSlider\\\\ImageSlider.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport { motion, AnimatePresence, LayoutGroup } from 'framer-motion';\nimport './ImageSliderStyles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ImageSlider = ({\n  startFullScreen = false,\n  initialImage = null\n}) => {\n  _s();\n  const trackRef = useRef(null);\n  const [isFullScreen, setIsFullScreen] = useState(startFullScreen);\n  const [selectedImage, setSelectedImage] = useState(initialImage);\n  const [selectedIndex, setSelectedIndex] = useState(null);\n  const [imageTransitionState, setImageTransitionState] = useState({\n    rect: startFullScreen ? {\n      top: 0,\n      left: 0,\n      width: window.innerWidth,\n      height: window.innerHeight\n    } : null,\n    objectPosition: '100% center',\n    scale: 1\n  });\n  const [sliderState, setSliderState] = useState({\n    mouseDownAt: 0,\n    prevPercentage: 0,\n    percentage: 0\n  });\n  useEffect(() => {\n    if (!selectedImage) {\n      var _trackRef$current;\n      const firstImage = (_trackRef$current = trackRef.current) === null || _trackRef$current === void 0 ? void 0 : _trackRef$current.querySelector('.image');\n      if (firstImage) {\n        const simulatedClickEvent = new MouseEvent('click', {\n          bubbles: true,\n          cancelable: true,\n          clientX: firstImage.getBoundingClientRect().left + firstImage.clientWidth / 2,\n          clientY: firstImage.getBoundingClientRect().top + firstImage.clientHeight / 2\n        });\n        firstImage.dispatchEvent(simulatedClickEvent);\n      }\n    }\n  }, [selectedImage]);\n  useEffect(() => {\n    const track = trackRef.current;\n    if (!track) return;\n    const handleOnDown = e => {\n      var _e$touches$;\n      if (isFullScreen) return;\n      const clientX = e.clientX || e.touches && ((_e$touches$ = e.touches[0]) === null || _e$touches$ === void 0 ? void 0 : _e$touches$.clientX);\n      setSliderState(prev => ({\n        ...prev,\n        mouseDownAt: clientX\n      }));\n    };\n    const handleOnUp = () => {\n      if (isFullScreen) return;\n      setSliderState(prev => ({\n        ...prev,\n        mouseDownAt: 0,\n        prevPercentage: prev.percentage\n      }));\n    };\n    const handleOnMove = e => {\n      var _e$touches$2;\n      if (isFullScreen) return;\n      const clientX = e.clientX || e.touches && ((_e$touches$2 = e.touches[0]) === null || _e$touches$2 === void 0 ? void 0 : _e$touches$2.clientX);\n      if (sliderState.mouseDownAt === 0) return;\n      const mouseDelta = sliderState.mouseDownAt - clientX;\n      const maxDelta = window.innerWidth / 0.8;\n      const percentage = mouseDelta / maxDelta * -100;\n      const nextPercentageUnconstrained = sliderState.prevPercentage + percentage;\n      const nextPercentage = Math.max(Math.min(nextPercentageUnconstrained, 0), -95);\n      setSliderState(prev => ({\n        ...prev,\n        percentage: nextPercentage\n      }));\n      track.animate({\n        transform: `translate(${nextPercentage}%, -50%)`\n      }, {\n        duration: 600,\n        fill: 'forwards',\n        easing: 'cubic-bezier(0.25, 0.1, 0.25, 1)'\n      });\n      const images = track.getElementsByClassName(\"image\");\n      Array.from(images).forEach(image => {\n        image.animate({\n          objectPosition: `${100 + nextPercentage * 1.1}% center`\n        }, {\n          duration: 600,\n          fill: 'forwards',\n          easing: 'cubic-bezier(0.25, 0.1, 0.25, 1)'\n        });\n      });\n    };\n    window.addEventListener('mousedown', handleOnDown);\n    window.addEventListener('mousemove', handleOnMove);\n    window.addEventListener('mouseup', handleOnUp);\n    window.addEventListener('touchstart', handleOnDown);\n    window.addEventListener('touchmove', handleOnMove);\n    window.addEventListener('touchend', handleOnUp);\n    return () => {\n      window.removeEventListener('mousedown', handleOnDown);\n      window.removeEventListener('mousemove', handleOnMove);\n      window.removeEventListener('mouseup', handleOnUp);\n      window.removeEventListener('touchstart', handleOnDown);\n      window.removeEventListener('touchmove', handleOnMove);\n      window.removeEventListener('touchend', handleOnUp);\n    };\n  }, [isFullScreen, sliderState]);\n  const handleImageClick = (e, src, index) => {\n    if (isFullScreen && selectedImage === src) {\n      setIsFullScreen(false);\n      setSelectedImage(null);\n      setImageTransitionState(prev => ({\n        ...prev,\n        rect: null\n      }));\n      return;\n    }\n    const imgElement = e.target;\n    const rect = imgElement.getBoundingClientRect();\n    const computedStyle = window.getComputedStyle(imgElement);\n    const objectPosition = computedStyle.objectPosition;\n    setImageTransitionState({\n      rect: {\n        top: rect.top,\n        left: rect.left,\n        width: rect.width,\n        height: rect.height\n      },\n      objectPosition,\n      scale: 1\n    });\n    setSelectedImage(src);\n    setSelectedIndex(index);\n    setIsFullScreen(true);\n  };\n  const handleFullScreenClose = () => {\n    setIsFullScreen(false);\n    setSelectedImage(null);\n    setImageTransitionState(prev => ({\n      ...prev,\n      rect: null\n    }));\n  };\n  const images = Array.from({\n    length: 7\n  }, (_, index) => `/images/${index + 1}.jpg`);\n  return /*#__PURE__*/_jsxDEV(LayoutGroup, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"image-track\",\n      ref: trackRef,\n      style: {\n        transform: `translate(${sliderState.percentage}%, -50%)`,\n        opacity: isFullScreen ? 0 : 1,\n        transition: 'opacity 0.4s ease-in-out'\n      },\n      children: images.map((src, index) => /*#__PURE__*/_jsxDEV(motion.img, {\n        layoutId: `image-${index}`,\n        className: \"image\",\n        src: src,\n        alt: `Image ${index + 1}`,\n        draggable: \"false\",\n        onClick: e => handleImageClick(e, src, index),\n        whileHover: {\n          scale: 1.05\n        },\n        style: {\n          cursor: 'pointer',\n          willChange: 'transform'\n        }\n      }, src, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(AnimatePresence, {\n      children: isFullScreen && imageTransitionState.rect && /*#__PURE__*/_jsxDEV(motion.div, {\n        initial: {\n          position: 'fixed',\n          top: imageTransitionState.rect.top,\n          left: imageTransitionState.rect.left,\n          width: imageTransitionState.rect.width,\n          height: imageTransitionState.rect.height,\n          scale: imageTransitionState.scale,\n          backgroundColor: 'black',\n          zIndex: 1000,\n          overflow: 'hidden'\n        },\n        animate: {\n          top: 0,\n          left: 0,\n          width: '100vw',\n          height: '100vh',\n          scale: 1\n        },\n        exit: {\n          top: imageTransitionState.rect.top,\n          left: imageTransitionState.rect.left,\n          width: imageTransitionState.rect.width,\n          height: imageTransitionState.rect.height,\n          scale: imageTransitionState.scale\n        },\n        transition: {\n          duration: 0.4,\n          ease: \"easeInOut\"\n        },\n        onClick: handleFullScreenClose,\n        children: /*#__PURE__*/_jsxDEV(motion.img, {\n          src: selectedImage,\n          style: {\n            width: '100%',\n            height: '100%',\n            objectFit: 'cover',\n            objectPosition: imageTransitionState.objectPosition,\n            transform: `scale(${imageTransitionState.scale})`,\n            transformOrigin: 'center center'\n          },\n          alt: \"Full screen view\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 175,\n    columnNumber: 9\n  }, this);\n};\n_s(ImageSlider, \"8RcsBqZ7dHXWniOt25IV/hFjzCg=\");\n_c = ImageSlider;\nexport default ImageSlider;\nvar _c;\n$RefreshReg$(_c, \"ImageSlider\");","map":{"version":3,"names":["React","useEffect","useRef","useState","motion","AnimatePresence","LayoutGroup","jsxDEV","_jsxDEV","ImageSlider","startFullScreen","initialImage","_s","trackRef","isFullScreen","setIsFullScreen","selectedImage","setSelectedImage","selectedIndex","setSelectedIndex","imageTransitionState","setImageTransitionState","rect","top","left","width","window","innerWidth","height","innerHeight","objectPosition","scale","sliderState","setSliderState","mouseDownAt","prevPercentage","percentage","_trackRef$current","firstImage","current","querySelector","simulatedClickEvent","MouseEvent","bubbles","cancelable","clientX","getBoundingClientRect","clientWidth","clientY","clientHeight","dispatchEvent","track","handleOnDown","e","_e$touches$","touches","prev","handleOnUp","handleOnMove","_e$touches$2","mouseDelta","maxDelta","nextPercentageUnconstrained","nextPercentage","Math","max","min","animate","transform","duration","fill","easing","images","getElementsByClassName","Array","from","forEach","image","addEventListener","removeEventListener","handleImageClick","src","index","imgElement","target","computedStyle","getComputedStyle","handleFullScreenClose","length","_","children","id","ref","style","opacity","transition","map","img","layoutId","className","alt","draggable","onClick","whileHover","cursor","willChange","fileName","_jsxFileName","lineNumber","columnNumber","div","initial","position","backgroundColor","zIndex","overflow","exit","ease","objectFit","transformOrigin","_c","$RefreshReg$"],"sources":["D:/VSC Projects/SvenDevPortfolio-2/src/components/ImageSlider/ImageSlider.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport { motion, AnimatePresence, LayoutGroup } from 'framer-motion';\r\nimport './ImageSliderStyles.css';\r\n\r\nconst ImageSlider = ({ startFullScreen = false, initialImage = null }) => {\r\n    const trackRef = useRef(null);\r\n    const [isFullScreen, setIsFullScreen] = useState(startFullScreen);\r\n    const [selectedImage, setSelectedImage] = useState(initialImage);\r\n    const [selectedIndex, setSelectedIndex] = useState(null);\r\n    const [imageTransitionState, setImageTransitionState] = useState({\r\n        rect: startFullScreen ? {\r\n            top: 0,\r\n            left: 0,\r\n            width: window.innerWidth,\r\n            height: window.innerHeight\r\n        } : null,\r\n        objectPosition: '100% center',\r\n        scale: 1\r\n    });\r\n\r\n    const [sliderState, setSliderState] = useState({\r\n        mouseDownAt: 0,\r\n        prevPercentage: 0,\r\n        percentage: 0\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (!selectedImage) {\r\n            const firstImage = trackRef.current?.querySelector('.image');\r\n            if (firstImage) {\r\n                const simulatedClickEvent = new MouseEvent('click', {\r\n                    bubbles: true,\r\n                    cancelable: true,\r\n                    clientX: firstImage.getBoundingClientRect().left + firstImage.clientWidth / 2,\r\n                    clientY: firstImage.getBoundingClientRect().top + firstImage.clientHeight / 2,\r\n                });\r\n                firstImage.dispatchEvent(simulatedClickEvent);\r\n            }\r\n        }\r\n    }, [selectedImage]);\r\n\r\n    useEffect(() => {\r\n        const track = trackRef.current;\r\n        if (!track) return;\r\n\r\n        const handleOnDown = (e) => {\r\n            if (isFullScreen) return;\r\n\r\n            const clientX = e.clientX || (e.touches && e.touches[0]?.clientX);\r\n            setSliderState(prev => ({\r\n                ...prev,\r\n                mouseDownAt: clientX\r\n            }));\r\n        };\r\n\r\n        const handleOnUp = () => {\r\n            if (isFullScreen) return;\r\n\r\n            setSliderState(prev => ({\r\n                ...prev,\r\n                mouseDownAt: 0,\r\n                prevPercentage: prev.percentage\r\n            }));\r\n        };\r\n\r\n        const handleOnMove = (e) => {\r\n            if (isFullScreen) return;\r\n\r\n            const clientX = e.clientX || (e.touches && e.touches[0]?.clientX);\r\n\r\n            if (sliderState.mouseDownAt === 0) return;\r\n\r\n            const mouseDelta = sliderState.mouseDownAt - clientX;\r\n            const maxDelta = window.innerWidth / 0.8;\r\n\r\n            const percentage = (mouseDelta / maxDelta) * -100;\r\n            const nextPercentageUnconstrained = sliderState.prevPercentage + percentage;\r\n            const nextPercentage = Math.max(Math.min(nextPercentageUnconstrained, 0), -95);\r\n\r\n            setSliderState(prev => ({\r\n                ...prev,\r\n                percentage: nextPercentage\r\n            }));\r\n\r\n            track.animate(\r\n                {\r\n                    transform: `translate(${nextPercentage}%, -50%)`\r\n                },\r\n                {\r\n                    duration: 600,\r\n                    fill: 'forwards',\r\n                    easing: 'cubic-bezier(0.25, 0.1, 0.25, 1)'\r\n                }\r\n            );\r\n\r\n            const images = track.getElementsByClassName(\"image\");\r\n            Array.from(images).forEach((image) => {\r\n                image.animate(\r\n                    {\r\n                        objectPosition: `${100 + nextPercentage * 1.1}% center`\r\n                    },\r\n                    {\r\n                        duration: 600,\r\n                        fill: 'forwards',\r\n                        easing: 'cubic-bezier(0.25, 0.1, 0.25, 1)'\r\n                    }\r\n                );\r\n            });\r\n        };\r\n\r\n        window.addEventListener('mousedown', handleOnDown);\r\n        window.addEventListener('mousemove', handleOnMove);\r\n        window.addEventListener('mouseup', handleOnUp);\r\n\r\n        window.addEventListener('touchstart', handleOnDown);\r\n        window.addEventListener('touchmove', handleOnMove);\r\n        window.addEventListener('touchend', handleOnUp);\r\n\r\n        return () => {\r\n            window.removeEventListener('mousedown', handleOnDown);\r\n            window.removeEventListener('mousemove', handleOnMove);\r\n            window.removeEventListener('mouseup', handleOnUp);\r\n\r\n            window.removeEventListener('touchstart', handleOnDown);\r\n            window.removeEventListener('touchmove', handleOnMove);\r\n            window.removeEventListener('touchend', handleOnUp);\r\n        };\r\n    }, [isFullScreen, sliderState]);\r\n\r\n    const handleImageClick = (e, src, index) => {\r\n        if (isFullScreen && selectedImage === src) {\r\n            setIsFullScreen(false);\r\n            setSelectedImage(null);\r\n            setImageTransitionState(prev => ({\r\n                ...prev,\r\n                rect: null\r\n            }));\r\n            return;\r\n        }\r\n\r\n        const imgElement = e.target;\r\n        const rect = imgElement.getBoundingClientRect();\r\n\r\n        const computedStyle = window.getComputedStyle(imgElement);\r\n        const objectPosition = computedStyle.objectPosition;\r\n\r\n        setImageTransitionState({\r\n            rect: {\r\n                top: rect.top,\r\n                left: rect.left,\r\n                width: rect.width,\r\n                height: rect.height\r\n            },\r\n            objectPosition,\r\n            scale: 1\r\n        });\r\n\r\n        setSelectedImage(src);\r\n        setSelectedIndex(index);\r\n        setIsFullScreen(true);\r\n    };\r\n\r\n    const handleFullScreenClose = () => {\r\n        setIsFullScreen(false);\r\n        setSelectedImage(null);\r\n        setImageTransitionState(prev => ({\r\n            ...prev,\r\n            rect: null\r\n        }));\r\n    };\r\n\r\n    const images = Array.from({ length: 7 }, (_, index) => `/images/${index + 1}.jpg`);\r\n\r\n    return (\r\n        <LayoutGroup>\r\n            <div\r\n                id=\"image-track\"\r\n                ref={trackRef}\r\n                style={{\r\n                    transform: `translate(${sliderState.percentage}%, -50%)`,\r\n                    opacity: isFullScreen ? 0 : 1,\r\n                    transition: 'opacity 0.4s ease-in-out'\r\n                }}\r\n            >\r\n                {images.map((src, index) => (\r\n                    <motion.img\r\n                        layoutId={`image-${index}`}\r\n                        key={src}\r\n                        className=\"image\"\r\n                        src={src}\r\n                        alt={`Image ${index + 1}`}\r\n                        draggable=\"false\"\r\n                        onClick={(e) => handleImageClick(e, src, index)}\r\n                        whileHover={{ scale: 1.05 }}\r\n                        style={{\r\n                            cursor: 'pointer',\r\n                            willChange: 'transform'\r\n                        }}\r\n                    />\r\n                ))}\r\n            </div>\r\n\r\n            <AnimatePresence>\r\n                {isFullScreen && imageTransitionState.rect && (\r\n                    <motion.div\r\n                        initial={{\r\n                            position: 'fixed',\r\n                            top: imageTransitionState.rect.top,\r\n                            left: imageTransitionState.rect.left,\r\n                            width: imageTransitionState.rect.width,\r\n                            height: imageTransitionState.rect.height,\r\n                            scale: imageTransitionState.scale,\r\n                            backgroundColor: 'black',\r\n                            zIndex: 1000,\r\n                            overflow: 'hidden'\r\n                        }}\r\n                        animate={{\r\n                            top: 0,\r\n                            left: 0,\r\n                            width: '100vw',\r\n                            height: '100vh',\r\n                            scale: 1\r\n                        }}\r\n                        exit={{\r\n                            top: imageTransitionState.rect.top,\r\n                            left: imageTransitionState.rect.left,\r\n                            width: imageTransitionState.rect.width,\r\n                            height: imageTransitionState.rect.height,\r\n                            scale: imageTransitionState.scale\r\n                        }}\r\n                        transition={{\r\n                            duration: 0.4,\r\n                            ease: \"easeInOut\"\r\n                        }}\r\n                        onClick={handleFullScreenClose}\r\n                    >\r\n                        <motion.img\r\n                            src={selectedImage}\r\n                            style={{\r\n                                width: '100%',\r\n                                height: '100%',\r\n                                objectFit: 'cover',\r\n                                objectPosition: imageTransitionState.objectPosition,\r\n                                transform: `scale(${imageTransitionState.scale})`,\r\n                                transformOrigin: 'center center'\r\n                            }}\r\n                            alt=\"Full screen view\"\r\n                        />\r\n                    </motion.div>\r\n                )}\r\n            </AnimatePresence>\r\n        </LayoutGroup>\r\n    );\r\n};\r\n\r\nexport default ImageSlider;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}