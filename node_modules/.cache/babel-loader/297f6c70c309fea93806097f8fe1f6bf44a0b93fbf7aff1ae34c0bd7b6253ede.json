{"ast":null,"code":"var _jsxFileName = \"D:\\\\VSC Projects\\\\SvenDevPortfolio-1\\\\src\\\\components\\\\ImageSlider.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport '../styles/ImageSliderStyles.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ImageSlider = ({\n  onImageClick,\n  isFullScreen,\n  selectedImage\n}) => {\n  _s();\n  const trackRef = useRef(null);\n  const [selectedIndex, setSelectedIndex] = useState(null);\n  const [sliderState, setSliderState] = useState({\n    mouseDownAt: 0,\n    prevPercentage: 0,\n    percentage: 0\n  });\n  useEffect(() => {\n    const track = trackRef.current;\n    if (!track) return;\n    const handleOnDown = e => {\n      var _e$touches$;\n      if (isFullScreen) return;\n      const clientX = e.clientX || e.touches && ((_e$touches$ = e.touches[0]) === null || _e$touches$ === void 0 ? void 0 : _e$touches$.clientX);\n      setSliderState(prev => ({\n        ...prev,\n        mouseDownAt: clientX\n      }));\n    };\n    const handleOnUp = () => {\n      if (isFullScreen) return;\n      setSliderState(prev => ({\n        ...prev,\n        mouseDownAt: 0,\n        prevPercentage: prev.percentage\n      }));\n    };\n    const handleOnMove = e => {\n      var _e$touches$2;\n      if (isFullScreen) return;\n      const clientX = e.clientX || e.touches && ((_e$touches$2 = e.touches[0]) === null || _e$touches$2 === void 0 ? void 0 : _e$touches$2.clientX);\n      if (sliderState.mouseDownAt === 0) return;\n      const mouseDelta = sliderState.mouseDownAt - clientX;\n      const maxDelta = window.innerWidth / 2;\n      const percentage = mouseDelta / maxDelta * -100;\n      const nextPercentageUnconstrained = sliderState.prevPercentage + percentage;\n      const nextPercentage = Math.max(Math.min(nextPercentageUnconstrained, 0), -100);\n      setSliderState(prev => ({\n        ...prev,\n        percentage: nextPercentage\n      }));\n      if (track) {\n        track.animate({\n          transform: `translate(${nextPercentage}%, -50%)`\n        }, {\n          duration: 1200,\n          fill: 'forwards'\n        });\n        const images = track.getElementsByClassName(\"image\");\n        Array.from(images).forEach(image => {\n          image.animate({\n            objectPosition: `${100 + nextPercentage}% center`\n          }, {\n            duration: 1200,\n            fill: 'forwards'\n          });\n        });\n      }\n    };\n    window.addEventListener('mousedown', handleOnDown);\n    window.addEventListener('mousemove', handleOnMove);\n    window.addEventListener('mouseup', handleOnUp);\n    window.addEventListener('touchstart', handleOnDown);\n    window.addEventListener('touchmove', handleOnMove);\n    window.addEventListener('touchend', handleOnUp);\n    return () => {\n      window.removeEventListener('mousedown', handleOnDown);\n      window.removeEventListener('mousemove', handleOnMove);\n      window.removeEventListener('mouseup', handleOnUp);\n      window.removeEventListener('touchstart', handleOnDown);\n      window.removeEventListener('touchmove', handleOnMove);\n      window.removeEventListener('touchend', handleOnUp);\n    };\n  }, [isFullScreen, sliderState]);\n  const handleImageClick = (src, index) => {\n    // If already in full screen and clicking the same image, close it\n    if (isFullScreen && selectedImage === src) {\n      onImageClick(src);\n      return;\n    }\n\n    // Slide to the clicked image before opening full screen\n    const track = trackRef.current;\n    if (track) {\n      const percentage = -index * 10; // Adjust based on your image gap and layout\n\n      // Animate track to center the clicked image\n      track.animate({\n        transform: `translate(${percentage}%, -50%)`\n      }, {\n        duration: 600,\n        fill: 'forwards'\n      });\n\n      // Animate image positions\n      const images = track.getElementsByClassName(\"image\");\n      Array.from(images).forEach((image, i) => {\n        image.animate({\n          objectPosition: `${100 + percentage}% center`\n        }, {\n          duration: 600,\n          fill: 'forwards'\n        });\n      });\n\n      // Update slider state\n      setSliderState(prev => ({\n        ...prev,\n        percentage,\n        prevPercentage: percentage\n      }));\n    }\n\n    // Open full screen after sliding\n    setSelectedIndex(index);\n    onImageClick(src);\n  };\n  const handleFullScreenMouseDown = e => {\n    onImageClick(selectedImage); // Close the full-screen image\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"image-track\",\n      ref: trackRef,\n      style: {\n        transform: `translate(${sliderState.percentage}%, -50%)`\n      },\n      children: Array.from({\n        length: 10\n      }, (_, index) => /*#__PURE__*/_jsxDEV(motion.img, {\n        layoutId: `image-${index}`,\n        className: \"image\",\n        src: `/images/${index + 1}.jpg`,\n        alt: `Image ${index + 1}`,\n        draggable: \"false\",\n        onClick: () => handleImageClick(`/images/${index + 1}.jpg`, index),\n        whileHover: {\n          scale: 1.05,\n          transition: {\n            duration: 0.4\n          }\n        },\n        style: {\n          objectPosition: `${100 + sliderState.percentage}% center`,\n          cursor: 'pointer',\n          willChange: 'transform'\n        }\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(AnimatePresence, {\n      children: isFullScreen && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(motion.div, {\n          initial: {\n            opacity: 0\n          },\n          animate: {\n            opacity: 1\n          },\n          exit: {\n            opacity: 0\n          },\n          transition: {\n            duration: 0.3\n          },\n          style: {\n            position: 'fixed',\n            top: 0,\n            left: 0,\n            right: 0,\n            bottom: 0,\n            backgroundColor: 'rgba(0,0,0,0.9)',\n            zIndex: 999\n          },\n          onClick: () => onImageClick(selectedImage),\n          onMouseDown: handleFullScreenMouseDown,\n          onTouchStart: handleFullScreenMouseDown\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(motion.div, {\n          style: {\n            position: 'fixed',\n            top: 0,\n            left: 0,\n            right: 0,\n            bottom: 0,\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            zIndex: 1000,\n            pointerEvents: 'none',\n            willChange: 'transform, opacity'\n          },\n          children: /*#__PURE__*/_jsxDEV(motion.img, {\n            layoutId: `image-${selectedIndex}`,\n            src: selectedImage,\n            alt: \"Full Screen\",\n            style: {\n              width: '100vw',\n              height: '100vh',\n              objectFit: 'cover',\n              objectPosition: 'center',\n              willChange: 'transform, opacity'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(ImageSlider, \"nz+baUQ9NP57PikICPedafXR73A=\");\n_c = ImageSlider;\nexport default ImageSlider;\nvar _c;\n$RefreshReg$(_c, \"ImageSlider\");","map":{"version":3,"names":["React","useEffect","useRef","useState","motion","AnimatePresence","jsxDEV","_jsxDEV","Fragment","_Fragment","ImageSlider","onImageClick","isFullScreen","selectedImage","_s","trackRef","selectedIndex","setSelectedIndex","sliderState","setSliderState","mouseDownAt","prevPercentage","percentage","track","current","handleOnDown","e","_e$touches$","clientX","touches","prev","handleOnUp","handleOnMove","_e$touches$2","mouseDelta","maxDelta","window","innerWidth","nextPercentageUnconstrained","nextPercentage","Math","max","min","animate","transform","duration","fill","images","getElementsByClassName","Array","from","forEach","image","objectPosition","addEventListener","removeEventListener","handleImageClick","src","index","i","handleFullScreenMouseDown","children","id","ref","style","length","_","img","layoutId","className","alt","draggable","onClick","whileHover","scale","transition","cursor","willChange","fileName","_jsxFileName","lineNumber","columnNumber","div","initial","opacity","exit","position","top","left","right","bottom","backgroundColor","zIndex","onMouseDown","onTouchStart","display","justifyContent","alignItems","pointerEvents","width","height","objectFit","_c","$RefreshReg$"],"sources":["D:/VSC Projects/SvenDevPortfolio-1/src/components/ImageSlider.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport { motion, AnimatePresence } from 'framer-motion';\r\nimport '../styles/ImageSliderStyles.css';\r\n\r\nconst ImageSlider = ({ onImageClick, isFullScreen, selectedImage }) => {\r\n    const trackRef = useRef(null);\r\n    const [selectedIndex, setSelectedIndex] = useState(null);\r\n    const [sliderState, setSliderState] = useState({\r\n        mouseDownAt: 0,\r\n        prevPercentage: 0,\r\n        percentage: 0\r\n    });\r\n\r\n    useEffect(() => {\r\n        const track = trackRef.current;\r\n        if (!track) return;\r\n\r\n        const handleOnDown = (e) => {\r\n            if (isFullScreen) return;\r\n            \r\n            const clientX = e.clientX || (e.touches && e.touches[0]?.clientX);\r\n            setSliderState(prev => ({\r\n                ...prev,\r\n                mouseDownAt: clientX\r\n            }));\r\n        };\r\n\r\n        const handleOnUp = () => {\r\n            if (isFullScreen) return;\r\n            \r\n            setSliderState(prev => ({\r\n                ...prev,\r\n                mouseDownAt: 0,\r\n                prevPercentage: prev.percentage\r\n            }));\r\n        };\r\n\r\n        const handleOnMove = (e) => {\r\n            if (isFullScreen) return;\r\n            \r\n            const clientX = e.clientX || (e.touches && e.touches[0]?.clientX);\r\n            \r\n            if (sliderState.mouseDownAt === 0) return;\r\n\r\n            const mouseDelta = sliderState.mouseDownAt - clientX;\r\n            const maxDelta = window.innerWidth / 2;\r\n\r\n            const percentage = (mouseDelta / maxDelta) * -100;\r\n            const nextPercentageUnconstrained = sliderState.prevPercentage + percentage;\r\n            const nextPercentage = Math.max(Math.min(nextPercentageUnconstrained, 0), -100);\r\n\r\n            setSliderState(prev => ({\r\n                ...prev,\r\n                percentage: nextPercentage\r\n            }));\r\n\r\n            if (track) {\r\n                track.animate(\r\n                    {\r\n                        transform: `translate(${nextPercentage}%, -50%)`\r\n                    },\r\n                    { duration: 1200, fill: 'forwards' }\r\n                );\r\n\r\n                const images = track.getElementsByClassName(\"image\");\r\n                Array.from(images).forEach((image) => {\r\n                    image.animate(\r\n                        {\r\n                            objectPosition: `${100 + nextPercentage}% center`\r\n                        },\r\n                        { \r\n                            duration: 1200, \r\n                            fill: 'forwards' \r\n                        }\r\n                    );\r\n                });\r\n            }\r\n        };\r\n\r\n        window.addEventListener('mousedown', handleOnDown);\r\n        window.addEventListener('mousemove', handleOnMove);\r\n        window.addEventListener('mouseup', handleOnUp);\r\n        \r\n        window.addEventListener('touchstart', handleOnDown);\r\n        window.addEventListener('touchmove', handleOnMove);\r\n        window.addEventListener('touchend', handleOnUp);\r\n\r\n        return () => {\r\n            window.removeEventListener('mousedown', handleOnDown);\r\n            window.removeEventListener('mousemove', handleOnMove);\r\n            window.removeEventListener('mouseup', handleOnUp);\r\n            \r\n            window.removeEventListener('touchstart', handleOnDown);\r\n            window.removeEventListener('touchmove', handleOnMove);\r\n            window.removeEventListener('touchend', handleOnUp);\r\n        };\r\n    }, [isFullScreen, sliderState]);\r\n    \r\n    const handleImageClick = (src, index) => {\r\n        // If already in full screen and clicking the same image, close it\r\n        if (isFullScreen && selectedImage === src) {\r\n            onImageClick(src);\r\n            return;\r\n        }\r\n\r\n        // Slide to the clicked image before opening full screen\r\n        const track = trackRef.current;\r\n        if (track) {\r\n            const percentage = -index * 10; // Adjust based on your image gap and layout\r\n            \r\n            // Animate track to center the clicked image\r\n            track.animate(\r\n                {\r\n                    transform: `translate(${percentage}%, -50%)`\r\n                },\r\n                { duration: 600, fill: 'forwards' }\r\n            );\r\n\r\n            // Animate image positions\r\n            const images = track.getElementsByClassName(\"image\");\r\n            Array.from(images).forEach((image, i) => {\r\n                image.animate(\r\n                    {\r\n                        objectPosition: `${100 + percentage}% center`\r\n                    },\r\n                    { \r\n                        duration: 600, \r\n                        fill: 'forwards' \r\n                    }\r\n                );\r\n            });\r\n\r\n            // Update slider state\r\n            setSliderState(prev => ({\r\n                ...prev,\r\n                percentage,\r\n                prevPercentage: percentage\r\n            }));\r\n        }\r\n\r\n        // Open full screen after sliding\r\n        setSelectedIndex(index);\r\n        onImageClick(src);\r\n    };\r\n\r\n    const handleFullScreenMouseDown = (e) => {\r\n        onImageClick(selectedImage); // Close the full-screen image\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div \r\n                id=\"image-track\" \r\n                ref={trackRef} \r\n                style={{ \r\n                    transform: `translate(${sliderState.percentage}%, -50%)` \r\n                }}\r\n            >\r\n                {Array.from({ length: 10 }, (_, index) => (\r\n                    <motion.img\r\n                        key={index}\r\n                        layoutId={`image-${index}`}\r\n                        className=\"image\"\r\n                        src={`/images/${index + 1}.jpg`}\r\n                        alt={`Image ${index + 1}`}\r\n                        draggable=\"false\"\r\n                        onClick={() => handleImageClick(`/images/${index + 1}.jpg`, index)}\r\n                        whileHover={{ scale: 1.05, transition: { duration: 0.4 } }}\r\n                        style={{\r\n                            objectPosition: `${100 + sliderState.percentage}% center`,\r\n                            cursor: 'pointer',\r\n                            willChange: 'transform',\r\n                        }}\r\n                    />\r\n                ))}\r\n            </div>\r\n            \r\n            <AnimatePresence>\r\n                {isFullScreen && (\r\n                    <>\r\n                        <motion.div\r\n                            initial={{ opacity: 0 }}\r\n                            animate={{ opacity: 1 }}\r\n                            exit={{ opacity: 0 }}\r\n                            transition={{ duration: 0.3 }}\r\n                            style={{\r\n                                position: 'fixed',\r\n                                top: 0,\r\n                                left: 0,\r\n                                right: 0,\r\n                                bottom: 0,\r\n                                backgroundColor: 'rgba(0,0,0,0.9)',\r\n                                zIndex: 999,\r\n                            }}\r\n                            onClick={() => onImageClick(selectedImage)}\r\n                            onMouseDown={handleFullScreenMouseDown}\r\n                            onTouchStart={handleFullScreenMouseDown}\r\n                        />\r\n                        <motion.div\r\n                            style={{\r\n                                position: 'fixed',\r\n                                top: 0,\r\n                                left: 0,\r\n                                right: 0,\r\n                                bottom: 0,\r\n                                display: 'flex',\r\n                                justifyContent: 'center',\r\n                                alignItems: 'center',\r\n                                zIndex: 1000,\r\n                                pointerEvents: 'none',\r\n                                willChange: 'transform, opacity'\r\n                            }}\r\n                        >\r\n                            <motion.img\r\n                                layoutId={`image-${selectedIndex}`}\r\n                                src={selectedImage}\r\n                                alt=\"Full Screen\"\r\n                                style={{\r\n                                    width: '100vw',\r\n                                    height: '100vh',\r\n                                    objectFit: 'cover',\r\n                                    objectPosition: 'center',\r\n                                    willChange: 'transform, opacity',\r\n                                }}\r\n                            />\r\n                        </motion.div>\r\n                    </>\r\n                )}\r\n            </AnimatePresence>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ImageSlider;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}